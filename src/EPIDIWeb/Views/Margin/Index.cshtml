@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "Margin ";
    ViewBag.Method = "Margin ";
}

<style>
    .progress {
        display: block;
        position: relative;
        margin: 20px;
        width: 425px;
        background-color: #ddd;
        border: 1px solid blue;
        padding: 1px;
        left: 40px;
        border-radius: 3px;
    }

    .percent {
        position: absolute;
        display: inline-block;
        color: #fff;
        font-weight: bold;
        top: 100%;
        left: 50%;
        margin-top: -9px;
        margin-left: -20px;
        -webkit-border-radius: 4px;
    }

    .bar {
        background-color: #007bff;
        width: 0%;
        height: 30px;
        border-radius: 4px;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                        @using (Html.BeginForm("UploadMarginExcel", "Margin", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmExcelForm" }))//onsubmit = "return myFunction()"
                        {
                            <div class="custom-file form-group float-sm-left mr-3" style="width:230px">
                                <input type="file" id="FileUpload" name="FileUpload" class="custom-file-input">
                                <label id="GatelblName" class="custom-file-label" style="text-align:left" for="file">Choose Margin</label>
                            </div>
                            <button type="submit" class="btn btn-info form-group float-sm-left mr-3 ">Import Margin</button>
                        }
                    </div>
                    <div class="col-6">
                        <button id="btnAddmap" type="button" onclick="AddEditMappingModal();" class="btn btn-outline-primary btn-uppercase float-right">
                    <i class="ti-plus mr-2"></i> Add Margin
                </button>
                        
                        @*<button type="button" class="btn btn-info form-group float-sm-left mr-3 " onclick="ExportInstrumentMapping()">Export Instruments Mapping</button>*@
                    </div>
                </div>
                <div>
                    @*<a href="/Margin/ExportMargin" class="btn btn-info float-sm-left">Export Margin</a>*@
                    <button type="button" class="btn btn-info float-sm-left" onclick="ExportMarginData()">Export Margin</button>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <table id="marginList" class="table table-bordered table-striped">
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>


<div class="modal fade marginmodal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Margin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="conversionData" />
                    <div class="col-md-6 form-group">
                        <label>Margin Type</label>
                        <input type="hidden" value="" id="marginid" />
                        <select class="form-control" id="ddlmargintype"></select>
                    </div><br />
                    <div class="col-md-6 form-group">
                        <label id="lblmargintypecontrol">Instrument End</label>
                        <select id="ddlmargintypeval" class="form-control" style="display:none;"></select>
                        <input type="text" class="form-control" id="txtinstrumentend" />
                    </div>
                    @*<div class="col-md-6 form-group">
                    <label>Instrument Conversion to USD</label>
                    <input type="text" class="form-control" id="InstrumentConversiontoUSD" />
                    </div>
                    <div class="col-md-6 form-group">
                    <label>Instrument Conversion to EUR</label>
                    <input type="text" class="form-control" id="InstrumentConversiontoEUR" />
                    </div>
                    <div class="col-md-6 form-group">
                    <label>Instrument Conversion to INR</label>
                    <input type="text" class="form-control" id="InstrumentConversiontoINR" />
                    </div>
                    <div class="col-md-6 form-group">
                    <label>Manual Instrument Conversion to USD</label>
                    <input type="text" class="form-control" id="ManualInstrumentConversiontoUSD" />
                    </div>
                    <div class="col-md-6 form-group">
                    <label>Manual Instrument Conversion to EUR</label>
                    <input type="text" class="form-control" id="ManualInstrumentConversiontoEUR" />
                    </div>
                    <div class="col-md-6 form-group">
                    <label>Manual Instrument Conversion to INR</label>
                    <input type="text" class="form-control" id="ManualInstrumentConversiontoINR" />
                    </div>*@
                    <table id="tblInstrument">
                        @*<tr>
                            <th>Instrument Name</th>
                            <th>Manual Conversion</th>
                            <th>Action</th>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group" style="width:200px;">
                                    <input id="MarginDtl_Id_0" type="hidden" value="1">
                                    <select class="form-control" id="instrumentid_0" style="border:1px solid;">                                        
                                    </select>
                                </div>
                            </td>
                            <td>
                                <div class="form-group" style="width:200px;">
                                    <input class="form-control" id="manualConversion_0" placeholder="Manual Conversion" type="number">
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <a href="javascript:void(0)" value="Delete" onclick="DeleteConversion(1)" style=" display: block; width: 100%; height: calc(2.25rem + 2px); padding: 0.375rem 0.75rem;">
                                        <i class="fa fa-trash" style="font-size: large;margin-top: 8px;" aria-hidden="true"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>*@
                    </table>
                </div>
                @*<div class="row col-12 mt-1" style="float: right;">
                    <div class="form-group">
                        <button type="button" onclick="AddConversion();" id="addnewConversion" class="btn btn-primary">Add Conversion</button>
                    </div>
                </div>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="SaveMapping();">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ProcessModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <h1>Processing...</h1>
                </div>
            </div>
            <div class="modal-body">
                <div class="col-6">
                    <div class="progress">
                        <div class="bar"></div>
                        <div class="percent">0%</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        $(document).ready(() => {
            MarginDataTable.init();
            GetMarginTypes();
            BindIntruments(0);
            $('#ddlmargintype').on('change', function() {
                if ($(this).val() > 1) {
                    $('#ddlmargintypeval').css('display', 'block');
                    $('#txtinstrumentend').css('display', 'none');
                    if ($(this).val() == 2) {
                        GetInstruments();
                        $('#lblmargintypecontrol').html('Instrument');
                    }
                    if ($(this).val() == 3) {
                        GetSymbolGroups();
                        $('#lblmargintypecontrol').html('Symbol Group');
                    }

                }
                else {
                    $('#ddlmargintypeval').css('display', 'none');
                    $('#txtinstrumentend').css('display', 'block');
                    $('#lblmargintypecontrol').html('Instrument End');
                }
            })

            $('#FileUpload').on('change', function (e) {
                //get the file name
                debugger
                var fileName = e.target.files[0].name;
                $(this).next('.custom-file-label').html(fileName);
            })


            $(document).on("submit", "#frmExcelForm", function (e) {
                $('#Loader').show();
                debugger;
                e.preventDefault();
                $('#Loader').show(); debugger
                var form = $(this);
                form.ajaxSubmit({
                    beforeSubmit: function () {
                        if (!form.valid()) {
                            $('#Loader').show();
                            return false;
                        }
                        else {
                            $('#Loader').show();
                            return true;
                        }
                    },
                    success: function (res) {
                        debugger
                        if (res.statusCode == 200) {
                            $('#FileUpload').val('');
                            $('#GatelblName').html('Choose Margin')
                            window.location.href = "/Margin/Index";
                            NotifyMsg('success', res.message);
                            $('#Loader').hide();

                        } else {
                            NotifyMsg('error', res.message);
                            $('#Loader').hide();
                        }
                    },
                    Errors: function () {

                        NotifyMsg('error', res.message);
                        $('#Loader').hide();
                    }
                });
                //$('#Loader').hide();
                return false;
            });

        });
        function AddEditMappingModal(obj) {
            debugger;
            $('#ddlmargintype').val($(obj).closest('tr').find('input[name="marginTypeId"]').val());
            $('#ddlmargintype').change();
            $('.marginmodal').modal('show');

            $('#masteritem').val($(obj).closest('tr').find('td:eq(0)').text());
            $('#marginid').val($(obj).closest('tr').find('input[type="hidden"]').val());

            setTimeout(function () {
               
                    if ($('#ddlmargintype').val() == 2) {
                        $('#ddlmargintypeval').val($(obj).closest('tr').find('input[name="masterInstrumentId"]').val());
                    }
                    else if ($('#ddlmargintype').val() == 3) {
                        $('#ddlmargintypeval').val($(obj).closest('tr').find('input[name="symbolGroupId"]').val());
                    }
                    else
                    {
                        $('#txtinstrumentend').val($(obj).closest('tr').find('input[name="instrumentEnd"]').val());
                    }
            }, 2500);


           
            debugger;
            $("#tblInstrument").empty();
            if ($('#marginid').val() != '') {
                 
                  GetMarginDetailsByMarginId($('#marginid').val());
            }
            else {
                AddConversion();
            }

            //debugger;
            //$('#InstrumentConversiontoUSD').val($(obj).closest('tr').find('input[name="InstrumentConversiontoUSD"]').val());
            //$('#InstrumentConversiontoEUR').val($(obj).closest('tr').find('input[name="InstrumentConversiontoEUR"]').val());
            //$('#InstrumentConversiontoINR').val($(obj).closest('tr').find('input[name="InstrumentConversiontoINR"]').val());
            //$('#ManualInstrumentConversiontoUSD').val($(obj).closest('tr').find('input[name="ManualInstrumentConversiontoUSD"]').val());
            //$('#ManualInstrumentConversiontoEUR').val($(obj).closest('tr').find('input[name="ManualInstrumentConversiontoEUR"]').val());
            //$('#ManualInstrumentConversiontoINR').val($(obj).closest('tr').find('input[name="ManualInstrumentConversiontoINR"]').val());
        }
        function SaveMapping() {
            debugger
            var marginViewModel = {};
            SaveConversionDataDtl();
            marginViewModel.MarginId = $('#marginid').val();
            marginViewModel.MarginTypeId = $('#ddlmargintype').val();
            if ($('#ddlmargintype').val() == 1) {
                marginViewModel.InstrumentEnd = $('#txtinstrumentend').val();
            }
            if ($('#ddlmargintype').val() == 2) {
                marginViewModel.MasterInstrumentId = $('#ddlmargintypeval').val();
            }
            if ($('#ddlmargintype').val() == 3) {
                marginViewModel.SymbolGroupId = $('#ddlmargintypeval').val();
            }
            marginViewModel.InstrumentConversiontoUSD = $('#InstrumentConversiontoUSD').val();
            marginViewModel.InstrumentConversiontoEUR = $('#InstrumentConversiontoEUR').val();
            marginViewModel.InstrumentConversiontoINR = $('#InstrumentConversiontoINR').val();
            marginViewModel.ManualInstrumentConversiontoUSD = $('#ManualInstrumentConversiontoUSD').val();
            marginViewModel.ManualInstrumentConversiontoEUR = $('#ManualInstrumentConversiontoEUR').val();
            marginViewModel.ManualInstrumentConversiontoINR = $('#ManualInstrumentConversiontoINR').val();
            marginViewModel.conversionDataStr = $("#conversionData").val();
            $.ajax({
                type: "POST",
                url: '/Margin/Margin_Upsert',
                data: { marginViewModel },
                success: function(data) {
                    $('.marginmodal').modal('hide');
                    //alert('Data Saved !!');
                    NotifyMsg('success', 'Margin save');
                    MarginDataTable.init();
                }
            });
        }
        function DeleteMargin(obj) {
            var id = $(obj).closest('tr').find('input[type="hidden"]').val();
            if (confirm('Are you sure you want to delete this record')) {
                $.ajax({
                    type: "POST",
                    url: '/Margin/DeleteMargin',
                    data: { id },
                    success: function(data) {
                        NotifyMsg('success', 'Deleted Successfully');
                        location.reload();
                    }
                });
            }
        }
        function GetMarginTypes() {
            $.ajax({
                type: "GET",
                url: '/Margin/GetMarginTypes',
                data: {},
                success: function(data) {
                    $.each(data, function(i, arr) {
                        var opt = new Option(arr.name, arr.id);
                        $('#ddlmargintype').append(opt);
                    });
                }
            });
        }
        function GetInstruments() {
            $('#ddlmargintypeval').html('');
            $.ajax({
                type: "GET",
                url: '/Margin/GetInstruments',
                data: {},
                success: function(data) {
                    $.each(data, function(i, arr) {
                        var opt = new Option(arr.name, arr.id);
                        $('#ddlmargintypeval').append(opt);
                    });

                }
            });
        }
        function GetSymbolGroups() {
            $('#ddlmargintypeval').html('');
            $.ajax({
                type: "GET",
                url: '/Margin/GetSymbolGroups',
                data: {},
                success: function(data) {
                    $.each(data, function(i, arr) {
                        var opt = new Option(arr.name, arr.id);
                        $('#ddlmargintypeval').append(opt);
                    });
                }
            });
        }

        var MarginDataTable = function() {
            let initTable1 = function() {
                let table = $('#marginList');

                let oTable = table.dataTable({
                    "columnDefs": [{
                        "orderable": false,
                        "className": 'select-checkbox',
                        "targets": 0
                    }],
                    "select": {
                        "style": 'os',
                        "selector": 'td:first-child'
                    },
                    "order": [[1, 'asc']],
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    "bFilter": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '/Margin/GetAll',
                        type: "POST"
                    },
                    "columns": [
                        {
                            "title": "Margin Type", "data": "marginTypeName", "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Master Instrument", "data": "masterInstrumentName", "width": "3%"

                        },
                        {
                            "title": "Instrument End", "data": "instrumentEnd", "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Symbol group", "data": "symbolGroupName", "orderable": false, "width": "2%"
                        },
                        {
                            "title": "Instrument To Convert", "data": "instrumentToConvert", "orderable": false, "width": "2%"
                        },
                        {
                            "title": "Action", "data": "marginId",
                            "render": function(data, type, row) {
                                let htmlData = "";

                               // htmlData += `<button title="Delete Margin" class="btn btn-sm btn-danger mr-1" onclick="DeleteMargin($(this));"><i class="fa fa-trash"></i></button>`;
                               htmlData += `<button title="Edit Margin" class="btn btn-sm btn-success  mr-1" onclick="AddEditMappingModal($(this));"><i class="fa fa-edit"></i></button>`;

                                htmlData += '<input type="hidden" value=' + row['marginId'] + ' />';
                                htmlData += '<input type="hidden" name="instrumentEnd" value=' + row['instrumentEnd'] + ' />';
                                htmlData += '<input type="hidden" name="marginTypeId" value=' + row['marginTypeId'] + ' />';
                                htmlData += '<input type="hidden" name="masterInstrumentId" value=' + row['masterInstrumentId'] + ' />';
                                htmlData += '<input type="hidden" name="symbolGroupId" value=' + row['symbolGroupId'] + ' />';
                                htmlData += '<input type="hidden" name="InstrumentConversiontoUSD" value=' + row['instrumentConversiontoUSD'] + ' />';
                                htmlData += '<input type="hidden" name="InstrumentConversiontoEUR" value=' + row['instrumentConversiontoEUR'] + ' />';
                                htmlData += '<input type="hidden" name="InstrumentConversiontoINR" value=' + row['instrumentConversiontoINR'] + ' />';
                                htmlData += '<input type="hidden" name="ManualInstrumentConversiontoUSD" value=' + row['manualInstrumentConversiontoUSD'] + ' />';
                                htmlData += '<input type="hidden" name="ManualInstrumentConversiontoEUR" value=' + row['manualInstrumentConversiontoEUR'] + ' />';
                                htmlData += '<input type="hidden" name="ManualInstrumentConversiontoINR" value=' + row['manualInstrumentConversiontoINR'] + ' />';
                                //htmlData += `<button title="Edit Margin" class="btn btn-sm btn-success mr-1" onclick="AddEditMappingModal($(this));"><i class="fa fa-edit"></i></button>`;

                                 htmlData += `<button title="Delete Margin" class="btn btn-sm btn-danger mr-1" onclick="DeleteMargin($(this));"><i class="fa fa-trash"></i></button>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    //"dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                init: function() {
                    if ($.fn.DataTable.isDataTable("#marginList")) {
                        $('#marginList').dataTable().fnDestroy();
                        //$('#divUserTable').html('<table class="table table-striped" width="100%" id="UserTable"></table>');
                    }
                    initTable1();
                }
            };
        }();
        var conversionCnt =0;
        function AddConversion(response) {
            var strHTML = "";
            if (conversionCnt == 0) {
                strHTML += `<tr id="trId_${conversionCnt}">`;
                strHTML += `<th>Instrument Name</th>`;
                strHTML += `<th>Manual Conversion</th>`;
                strHTML += `<th>Instrument To Convert</th>`;
                //strHTML += `<th> </th>`;
                //strHTML += `<th>Action</th>`;
                strHTML += `</tr>`;
            }
            strHTML += `<tr id="trId_${conversionCnt}">`;
            strHTML += `<td>`;
            strHTML += `<div class="form-group" style="width:200px;">`;
            strHTML += `<input id="MarginDtlId_${conversionCnt}" type="hidden">`;
            strHTML += `<select class="form-control" id="instrumentid_${conversionCnt}" style="border:1px solid;">`;
            strHTML += `</select>`;
            strHTML += `</div>`;
            strHTML += `</td>`;
            strHTML += `<td>`;
            strHTML += `<div class="form-group" style="width:200px;">`;
            strHTML += `<input class="form-control" id="manualConversion_${conversionCnt}" placeholder="Manual Conversion" type="number">`;
            strHTML += `</div>`;
            strHTML += `</td>`;
            strHTML += `<td>`;
            strHTML += `<select class="form-control" id="currency_${conversionCnt}" style="margin-bottom:17px;">`;
            strHTML += `</select>`;
            strHTML += `</td>`;
            //strHTML += `<td>`;
            //strHTML += `<div class="form-group">`;
            //strHTML += `<a href="javascript:void(0)" value="Delete" onclick="DeleteConversion(${conversionCnt})" style="margin-right:-30px; width: 100%; height: calc(2.25rem + 2px); padding: 0.375rem 0.75rem;">`;
            //strHTML += `<i class="fa fa-trash" style="font-size: large;margin-top: 8px;" aria-hidden="true"></i>`;
            //strHTML += `</a>`;
            //strHTML += `</div>`;
            //strHTML += `</td>`;
            strHTML += `</tr>`;
            $("#tblInstrument").append(strHTML);
            if (response != undefined) {
                BindIntruments(conversionCnt,response.instrumentId);
                BindIntrumentToConvert(conversionCnt,response.instrumentToConvertId);
                $("#MarginDtlId_" + conversionCnt).val(response.id);
                //$("#instrumentid_" + conversionCnt).val(response.instrumentId);
                $("#manualConversion_" + conversionCnt).val(response.manualConversion);
            }
            else {
                BindIntruments(conversionCnt);
                BindIntrumentToConvert(conversionCnt);
            }
            conversionCnt = conversionCnt + 1;
        }
        function BindIntruments(count, defaultVal = "") {
            debugger;
            $.ajax({
                async: true,
                type: "POST",
                url: '/QuoteMarkUpRule/GetInstrumentsDropDown',
                dataType: 'json',
                data: {},
                success: function(response) {
                    $("#instrumentid_" + count).append(`<option value = "" > --Select--</option>`)
                    for (var i = 0; i < response.length; i++) {
                        $("#instrumentid_" + count).append(`<option value = "${response[i].value}"> ${response[i].text}</option>`)
                    }
                    if (defaultVal != "") {
                        $("#instrumentid_" + count).val(defaultVal);
                    }
                },
                error: function(errorTemp) {
                    console.log('error', errorTemp);
                }
            })
        }

         function BindIntrumentToConvert(count, defaultVal = "") {
            debugger;
            $.ajax({
                async: true,
                type: "POST",
                url: '/Margin/GetInstrumentToConvertTypes',
                dataType: 'json',
                data: {},
                success: function(response) {
                    $("#currency_" + count).append(`<option value = "" > --Select--</option>`)
                    for (var i = 0; i < response.length; i++) {
                        $("#currency_" + count).append(`<option value = "${response[i].id}"> ${response[i].name}</option>`)
                    }
                    if (defaultVal != "") {
                        $("#currency_" + count).val(defaultVal);
                    }
                },
                error: function(errorTemp) {
                    console.log('error', errorTemp);
                }
            })
        }
        function DeleteConversion(counter) {
            $("#trId_" + counter).remove();
        }
        function SaveConversionDataDtl() {
            var conversionDtl = [];
            for (var i = 0; i <= conversionCnt; i++) {
                if (($("#instrumentid_" + i).val() != "") && ($("#instrumentid_" + i).val() != null)) {
                    var obj = {
                        Id: $("#MarginDtlId_" + i).val() == "" ? 0 : $("#MarginDtlId_" + i).val(),
                        MarginId: $("#marginid").val() == "" ? 0 : $("#marginid" + i).val(),
                        InstrumentId: $("#instrumentid_" + i).val(),
                        ManualConversion: $("#manualConversion_" + i).val(),
                        InstrumentToConvertId: $("#currency_" + i).val(),
                    }
                    conversionDtl.push(obj);
                }
            }
            $("#conversionData").val(JSON.stringify(conversionDtl));
        }
        function GetMarginDetailsByMarginId(marginId) {
            $.ajax({
                async: true,
                type: "GET",
                url: 'GetMarginDetails_All',
                dataType: 'json',
                data: { MarginId: marginId},
                success: function(response) {
                    $("#tblInstrument").empty();
                    conversionCnt = 0;
                    for (var i = 0; i < response.length; i++) {
                        ////design
                        AddConversion(response[i]);
                    }
                },
                error: function(errorTemp) {
                    console.log('error', errorTemp);
                }
            })
        }
        function ExportMarginData() {
            debugger;
            updateProgress(0);
            var table1 = $('#tblInstrument tr').length;

            //$("#ProcessModal").modal({ backdrop: 'static', keyboard: false });
            //$("#ProcessModal").focus();
            $("#ProcessModal").modal('show');

            var totalCnt = table1;//.fnSettings().fnRecordsTotal()
            var counter = totalCnt / 100;
            counter = Math.round(counter);
            var intervalId = window.setInterval(function () {
                if (counter < 90) {
                    updateProgress(counter);
                    counter = counter + 7;
                }
            }, 50);

            $.ajax({
                type: "POST",
                url: 'ExportMargin',
                //contentType: false,
                dataType: "binary",
                processData: false,
                xhrFields: {
                    'responseType': 'blob'
                },
                success: function (res) {
                    debugger
                    const date = new Date();
                    let day = date.getDate();
                    let month = date.getMonth() + 1;
                    let year = date.getFullYear();
                    let currentDate = `${day}_${month}_${year}`;
                    $("#ProcessModal").modal("hide");
                    //updateProgress(0);
                    clearInterval(intervalId);
                    //completeHandler();

                    NotifyMsg('success', 'The file is exported');
                    var link = document.createElement('a'),
                        filename = "Margin_" + currentDate + ".xlsx";
                    link.href = URL.createObjectURL(res);
                    link.download = filename;
                    link.click();
                    completeHandler();
                },
                error: function (errorTemp) {
                    NotifyMsg('error', errorTemp);
                    console.log('error', errorTemp);
                }
            })
        }
        function updateProgress(count) {
            $('.bar').css('width', count + '%');
            $('.percent').text(count + '%');
        }
        function completeHandler() {
            $('.bar').width("100%");
            $('.percent').html("100%");
            $("#ProcessModal").modal('hide');
        }
    </script>
}