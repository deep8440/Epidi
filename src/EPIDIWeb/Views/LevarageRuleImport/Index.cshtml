@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "Levarage Rule Import";
    ViewBag.Method = "Levarage Rule Import";
}

<style>
    .error {
        color: #e73d4a;
    }

    select#MasterInstrumentalId {
        color: black !important;
    }

    .select2-container--default .select2-dropdown .select2-search__field:focus, .select2-container--default .select2-search--inline .select2-search__field:focus {
        outline: 0;
        border: none;
    }
</style>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                @*<h3 class="card-title">Levarage Import List</h3>*@
                <div class="row">
                    <div class="col-12">
                        <a id="btnAddLevarageRule" href="/LevarageRuleImport/AddLeverageRule" class="btn btn-outline-primary btn-uppercase float-right">
                            <i class="ti-plus mr-2"></i> Add LeverageRule
                        </a>
                    </div>
                </div>
            </div>
            <br />
            <div class="col-12">
                
                
               @* <div class="col-6">
                    @using (Html.BeginForm("UploadLevarageRuleExcel", "LevarageRuleImport", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmExcelForm" }))
                    {
                        <div class="custom-file form-group float-sm-left mr-3" style="width:230px">
                            <input type="file" id="FileUpload" name="FileUpload" class="custom-file-input">
                            <label id="lblSkipRule" class="custom-file-label" style="text-align:left" for="file">Choose File</label>
                        </div>
                        <button type="submit" class="btn btn-info form-group float-sm-left mr-3 "><i class="fa fa-file-import"></i>Import Levarage</button>
                    }
                </div>*@
                <div>
                </div>
            </div>
            <div class="card-body">
                <table id="LevarageRuleList" class="table table-bordered table-striped">
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal editrulemodal" tabindex="-1" role="dialog" id="btnMapModal">
    <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModelTitleLable">LevarageRule</h5>

            </div>

            <div class="modal-body editrulemodalbody">
            </div>
            <div class="modal-footer">
                <input id="btnSave" type="button" onclick="Updaterule();" class="btn btn-primary saveBtn" value="Save" />
                <button class="btn btn-primary loading" type="button" disabled style="display:none;float:right;">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Saving...
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>


        </div>
    </div>
</div>

@section Scripts{
    <script>
        var globalIDS = [];
        $(document).ready(() => {
            $('#FileUpload').on('change', function (e) {
                //get the file name
                var fileName = e.target.files[0].name;
                $(this).next('.custom-file-label').html(fileName);

            });
            $(document).on('click','#btnaddnewrow',function () {
                let html = '';
                html += '<div class="row"><div class="col-md-3 form-group"> <label>Band From</label> <input type="number" class="form-control" value="" id="bandfrom"> </div > <div class="col-md-3 form-group" > <label> Band To </label> <input type="number" class="form-control" value="" id="txtbandto"> </div > <div class="col-md-3 form-group" > <label> Levarage Amount </label> <input type="number" class="form-control" value="" id="txtamt"></div><a class="btn btn-sm" onclick = "DeletedIds(0,$(this));" > <i class="fa fa-trash" style = "margin-top:30px;" > </i></a></div>';
                $(html).insertAfter($($(this).parent().parent().siblings()[$(this).parent().parent().siblings().length - 1]));
            });
            $(document).on("submit", "#frmExcelForm", function (e) {
                e.preventDefault();
                $('#Loader').show();
                var form = $(this);
                form.ajaxSubmit({
                    beforeSubmit: function () {


                        return true;

                    },
                    success: function (res) {
                        debugger
                        if (res.statusCode == 200) {
                            $('#FileUpload').val('');
                            $('#lblSkipRule').html('Choose File');
                            NotifyMsg('success', res.message);
                            $('#Loader').hide();
                        } else {
                            NotifyMsg('error', res.message);
                            $('#Loader').hide();
                        }
                    },
                    Errors: function () {

                        NotifyMsg('error', res.message);
                        $('#Loader').hide();
                    }
                });
                return false;
            });

            RuleDataTable.init();

        });


        function AddEditMathForm() {
            AddMath();
        }

        //function DeleteRule(obj) {
        //    debugger 
        //    var ID = $($(obj).closest('tr').find('input[type="hidden"]')[1]).val();
        //    if (confirm('Are you sure you want to delete this record')) {
        //        $.ajax({
        //            type: "POST",
        //            async: false,
        //            url: '/LevarageRuleImport/RemoveRule',
        //            data: { 'id': ID },
        //            success: function (data) {
        //                RuleDataTable.init();
        //                alert('Record Deleted !!');

        //            },
        //             error: function(request,status,errorThrown) {
        //                RuleDataTable.init();
        //            }
        //        });
        //    }
        //}
        function Updaterule() {
            var leverageRuleImport = {};
            leverageRuleImport.LeverageId = $('#leverageid').val();
            leverageRuleImport.MasterInstrumentId = $('#ddlmasterinstrument').val();
            leverageRuleImport.MasterInstrumentName = '';
            leverageRuleImport.Day = $('#txtday').val();
            leverageRuleImport.TimeFrom = $('#txttimefrom').val();
            leverageRuleImport.TimeTo = $('#txttimeto').val();
            leverageRuleImport.IsNewPosition = $('#ddlisnewpos').val();
            leverageRuleImport.levarageBand = [];
            debugger;
            var count = $('.leveragebandmapping').length;
            for (var i = 0; i < count; i++) {
                var obj = {};
                obj.BandFrom = $('#bandfrom' + i).val();
                obj.BandTo = $('#txtbandto' + i).val();
                obj.LeverageAmount = $('#txtamt' + i).val();
                leverageRuleImport.levarageBand.push(obj);
            }

            $.ajax({
                type: "POST",
                async: false,
                url: '/LevarageRuleImport/SaveLeverage',
                data: { leverageRuleImport },
                success: function (data) {
                    debugger;
                    $('.editrulemodal').modal('show');
                    $('.editrulemodalbody').html(data);
                    $('.frmModel').addClass('hide');
                    return;
                }
            });

        }
        function DeletedIds(id, obj) {
            debugger;
            globalIDS.push(id);
            $(obj).parent().remove();
            LevarageRuleList.init();
        }
        function GetMathById(obj) {
            debugger;
            var ID = $(obj).closest('tr').find('input[type="hidden"]').val();
            $.ajax({
                type: "POST",
                async: false,
                url: '/LevarageRuleImport/Edit',
                data: { ID },
                success: function (data) {
                    debugger;
                    $('.editrulemodal').modal('show');
                    $('.editrulemodalbody').html(data);
                    $('.frmModel').addClass('hide');
                    //return;
                }
            });
        }

        var RuleDataTable = function () {
            let initTable1 = function () {
                let table = $('#LevarageRuleList');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '/LevarageRuleImport/GetAll',
                        type: "POST"
                    },
                    "columns": [
                        {
                            "title": "Rule Name", "data": "lRuleName", "name": "lRuleName", "orderable": true, "width": "3%"
                        },
                        
                        //{
                        //    "title": "Master Instrument", "data": "masterInstrumentName", "name": "MasterInstrumentName", "orderable": true, "width": "3%"
                        //},
                        //{
                        //    "title": "Symbol Group", "data": "symbolGroupName", "name": "symbolGroupName", "orderable": true, "width": "3%"
                        //},
                        {
                            "title": "Priority", "data": "lRulePriority", "name": "lRulePriority", "orderable": true, "width": "3%"
                        },
                        {
                            "title": "Comment", "data": "lComment", "name": "LComment",  "width": "3%"
                        },
                        //{
                        //    "title": "Legal Entity", "data": "legalEntity", "name": "legalEntity", "orderable": true, "width": "3%"
                        //},
                        //{
                        //    "title": "Day", "data": "day", "name": "Day", "orderable": true, "width": "3%"
                        //},
                        //{
                        //    "title": "TimeFrom", "data": "timeFrom", "name": "TimeFrom",
                        //    "render": function (data, type, row) {
                        //        let htmlData = '<p>';
                        //        if (row.timeFrom != null && row.timeFrom != undefined) {
                        //            htmlData += row.timeFrom.toString().substring(0, 8) + '</p>';
                        //        }
                        //        else { htmlData = ""; }
                        //        return htmlData;
                        //    },
                        //    "orderable": true, "width": "3%"
                        //},
                        //{
                        //    "title": "TimeTo", "data": "timeTo", "name": "TimeTo",
                        //    "render": function (data, type, row) {
                        //        let htmlData = '<p>';
                        //        if (row.timeTo != null && row.timeTo != undefined) {
                        //            htmlData += row.timeTo.toString().substring(0, 8) + '</p>';
                        //        }
                        //        else { htmlData = ""; }
                        //        return htmlData;
                        //    },
                        //    "orderable": true, "width": "3%"
                        //},
                        //{
                        //    "title": "IsNewPosition", "data": "isNewPosition",
                        //    "render": function (dataa, type, row) {
                        //        let htmlData = '<p>';
                        //        if (row.isNewPosition == 'True') {
                        //            htmlData += 'Yes</p>';
                        //        }
                        //        else {
                        //            htmlData += 'No</p>';
                        //        }
                        //        return htmlData;
                        //    },
                        //    "orderable": false, "width": "3%"
                        //},
                        {
                            "title": "Action", "data": "leverageId",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += "<a class='btn btn-sm btn-success mr-1' href='/LevarageRuleImport/AddLeverageRule/" + row.lRuleId + "' ><i class='fa fa-edit'></i></a>";
                                htmlData += "<input type='hidden' value='" + row.leverageId + "'/>";
                                htmlData += "<input type='hidden' value='" + row.lRuleId + "'/>";
                                htmlData += "<a class='btn btn-danger edt-dlt mr-1' href='javascript:void(0);' data-uri='/LevarageRuleImport/RemoveRule?Id=" + row.lRuleId + "' ><i class='fa fa-trash'></i></a>";



                                // htmlData += `<a title="Delete Levarage Rule" class="btn btn-sm btn-danger mr-1" onclick="DeleteRule($(this));"><i class="fa fa-trash"></i></a>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    //"dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                init: function () {
                    if ($.fn.DataTable.isDataTable("#LevarageRuleList")) {
                        $('#LevarageRuleList').dataTable().fnDestroy();
                        //$('#divUserTable').html('<table class="table table-striped" width="100%" id="UserTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

    </script>
}