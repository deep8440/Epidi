@model CommissionRuleViewModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "Edit Commission Rule";
    ViewBag.Method = " Edit CommissionRule";
    

    ViewBag.DetailName = "Commission Rule";
    ViewBag.DetailURL = "/CommissionRule/Index";
}
<style>
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    .select2-container {
        display: block;
    }

    h3 {
        color: #dc3545 !important;
        font-weight: bold;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .progress {
        display: block;
        position: relative;
        margin: 20px;
        width: 425px;
        background-color: #ddd;
        border: 1px solid blue;
        padding: 1px;
        left: 40px;
        border-radius: 3px;
    }

    .percent {
        position: absolute;
        display: inline-block;
        color: #fff;
        font-weight: bold;
        top: 100%;
        left: 50%;
        margin-top: -9px;
        margin-left: -20px;
        -webkit-border-radius: 4px;
    }

    .bar {
        background-color: #007bff;
        width: 0%;
        height: 30px;
        border-radius: 4px;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
    }

    #IsMobileView {
        top: 10px;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
        margin-top: 40px;
        margin-left: 10px;
    }

    #IsBrokerCommission {
        top: 10px;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
        margin-top: 40px;
        margin-left: 10px;
    }

    #status {
        margin: 20px;
        color: #008000;
        font-size: 16px;
    }

</style>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-12">
                        <h3>Commission Rule</h3>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-3">
                        <div class="form-group">
                            <input type="hidden" id="rulesCondtionData" />
                            <input type="hidden" id="instrumentData" />
                            @Html.HiddenFor(model => model.Id,"Id")
                            @Html.LabelFor(model => model.Comment, "Comment")
                            @Html.TextBoxFor(p => p.Comment, new { @class = "form-control", @placeholder = "Comment" ,@name="Comment"})
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Priority, "Priority")
                            @Html.TextBoxFor(p => p.Priority, new { @class = "form-control", @placeholder = "Priority" ,@name="Priority"})
                           
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TimeToApply, "TimeToApply")
                            @Html.TextBoxFor(p => p.TimeToApply, new {@type="time",@step=2 ,@class = "form-control", @placeholder = "TimeToApply" ,@name="TimeToApply"})

                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrderComment,"OrderComment")
                            @Html.TextBoxFor(p => p.OrderComment, new {@class = "form-control", @placeholder = "OrderComment" ,@name="OrderComment"})
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Leverage,"Leverage")
                            @Html.TextBoxFor(p => p.Leverage, new {@class = "form-control", @placeholder = "Leverage" ,@name="Leverage"})
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.WhenToApplyComboId, "WhenToApplyCombo")
                            @Html.DropDownListFor(model => model.WhenToApplyComboId, new SelectList(ViewBag.WhenToApplyCombo, "Value", "Text", Model.WhenToApplyComboId), "-- Select WhenToApplyCombo --", new { @class = "form-control js-select2" ,@name="WhenToApplyCombo" })
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitsTypeId, "Chargeble Units")
                            @Html.DropDownListFor(model => model.UnitsTypeId, new SelectList(ViewBag.UnitsType, "Value", "Text", Model.UnitsTypeId), "-- Select Chargeble Units --", new { @class = "form-control js-select2" ,@name="UnitsType" })
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.WhereToApplyId, "WhereToApplyId")
                            @Html.DropDownListFor(model => model.WhereToApplyId, new SelectList(ViewBag.WhereToApplyId, "Value", "Text", Model.WhereToApplyId), "-- Select WhereToApplyId --", new { @class = "form-control js-select2" ,@name="WhereToApplyId" })
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PercentageValue, "PercentageValue")
                            @Html.TextBoxFor(model => model.PercentageValue, new {@class = "form-control", @placeholder = "PercentageValue" ,@name="PercentageValue"})
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            
                            @Html.CheckBoxFor(p => p.IsMobileView, new {@name="IsMobileView", value="false"})
                            @Html.LabelFor(model => model.IsMobileView, "IsMobileView")
                        </div>
                    </div>
                  
                   
                    </div>
                <div class="col-3">
                    <div class="form-group">

                        @Html.CheckBoxFor(p => p.IsBrokerCommission, new {@name="IsBrokerCommission", value="false"})
                        @Html.LabelFor(model => model.IsBrokerCommission, "IsBrokerCommission")
                    </div>
                </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                        @using (Html.BeginForm("SaveCommissionRule", "CommissionRule", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmQuoteMarkUpExcelForm" }))//onsubmit = "return myFunction()"
                        {
                            @Html.HiddenFor(model => model.Id,"Id")
                            @Html.HiddenFor(p => p.Comment)
                            @Html.HiddenFor(p => p.Priority)
                            @Html.HiddenFor(p => p.TimeToApply)
                            @Html.HiddenFor(p => p.WhenToApplyComboId)
                            @Html.HiddenFor(p => p.OrderComment)
                            @Html.HiddenFor(p => p.Leverage)
                            @Html.HiddenFor(p => p.UnitsTypeId)
                            @Html.HiddenFor(p => p.WhenToApplyComboId)
                            @Html.HiddenFor(p => p.PercentageValue)
                            @Html.HiddenFor(p => p.IsMobileView)
                            @Html.HiddenFor(p=>p.IsBrokerCommission)
                            <div class="row">
                                @if (Model.objRuleConditionViewModel != null && Model.objRuleConditionViewModel.conditionRulesDtlObj != "")
                                {
                                    <input type="hidden" id="ruleconditionjson" value="@Model.objRuleConditionViewModel.conditionRulesDtlObj" />
                                }
                                <div class="col-3" id="divUploadFile">
                                    <div class="custom-file form-group" style="width:230px;margin-left:20px;">
                                        <input type="file" id="FileUpload" name="FileUpload" class="custom-file-input">
                                        <label id="lblRule" class="custom-file-label" style="text-align:left" for="file">Choose Commission</label>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <button type="submit" id="importToExcel" style="margin-left:20px;" class="btn btn-info">Import Commission</button>
                                  
                                  </div>

                            </div>
                            <div class="">
                            @*<button type="button" class="btn btn-info mb-3 mt-3" style="margin-left:20px;" onclick="ExportCommissionRuleData(@Model.Id)">Export Commission</button>*@
                            <button type="button" class="btn btn-info mb-3 mt-3" style="margin-left:20px;" onclick='window.location = "@Url.Action("ExportCommissionRuleInstrument", "CommissionRule", new {Model.Id})";'>Export Commission</button>
                        </div>
                        }
                        </div>
                    </div>
                <div id="accordion">
                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title w-100">
                                <a class="d-block w-100 collapsed" data-toggle="collapse" href="#collapseOne" aria-expanded="false">
                                    Instrument Rules
                                </a>
                            </h3>
                        </div>
                        <div id="collapseOne" class="collapse show" data-parent="#accordion" style="overflow:auto">
                            <div class="card-body">
                                <div id="DivInstrument">
                                    <table id="tblInstrument">
                                        @*<tr>
                                            <th>#</th>
                                            <th>InstrumentName</th>
                                            <th>SymbolGroup</th>
                                            <th><p>Buy Fee<br>Per<br>$1000<br>Notional($)</p></th>
                                            <th><p>Sell Fee<br>Per<br>$1000<br>Notional($)</p></th>
                                            <th><p>Buy Fee<br>(%)<br>Notional</p></th>
                                            <th><p>Sell Fee<br>(%)<br>Notional</p></th>
                                            <th><p>Fee Buy<br>Per<br>Units($)</p></th>
                                            <th><p>Fee Sell<br>Units($)<p/></th>
                                            <th>Feecharge</th>
                                            <th>RoundingBuy</th>
                                            <th>RoundingSell</th>
                                            <th>DecimalCut</th>
                                            <th>DaysToApply</th>
                                            <th>Action</th>
                                        </tr>*@
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-info">
                        <div class="card-header">
                            <h4 class="card-title w-100">
                                <a class="d-block w-100" data-toggle="collapse" href="#collapseThree">
                                    Rule Condition
                                </a>
                            </h4>
                        </div>
                        <div id="collapseThree" class="collapse" data-parent="#accordion">
                            <div class="card-body">
                                <div class="col-12">
                                    <div class="row" id="divRuleDetails">
                                        <input id="objRuleConditions_Dtl_Id_0" type="hidden" class="form-control">
                                        <input id="objRuleConditions_Id_0" type="hidden" class="form-control">
                                        <div class="col-4">
                                            <div class="form-group">
                                                <label>Fields Name</label>
                                                @if (Model.objRuleConditionViewModel != null && Model.objRuleConditionViewModel.conditionRulesDtlObj != "")
                                                {
                                                        <input type="hidden" id="ruleconditionjson" value="@Model.objRuleConditionViewModel.conditionRulesDtlObj" />
                                                }
                                                <select id="FieldName_0" name="FieldName_0" class="form-control" onchange="FieldsNameOnChange(0);">
                                                    @* @foreach (var filed in ViewBag.UserFieldsList)
                                                    {
                                                    <option value="@filed.Value">@filed.Text</option>
                                                    }*@
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="form-group">
                                                <label>Operation</label>
                                                <select id="Opration_0" name="Opration" class="form-control"></select>
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValue_0">
                                            <div class="form-group">
                                                <label>Operation Value</label>
                                                <input type="text" id="OprationValue_0" name="OprationValue_0" class="form-control" placeholder="Operation Value" />
                                                @*@Html.TextBoxFor(p => p.OprationValue, new { @class = "form-control", @placeholder = "Opration Value"
                                                ,@name="OprationValue",Id = "OprationValue_0"})*@
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValueTemp_0" style="display:none;">
                                            <div class="form-group">
                                                <label>Operation Value</label>
                                                <select id="OprationIdTemp_0" name="OprationIdTemp" onchange="ddlOprationValueTempOnChange(0)" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row col-12 mt-1" >
                                        @*style="float: right;"*@
                                        <div class="form-group">
                                            <button type="button" onclick="AddNewRuleDtl();" id="addnewCondition" class="btn btn-primary">Add Condition</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <h3></h3>
                    </div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <h3></h3>
                    </div>
                </div>

                <div class="card-header">
                    <div class="row">
                        <div class="col-6">
                            <h3></h3>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button onclick="SaveCommissionRuleData();" class="btn btn-primary">Save</button>
        </div>
    </div>
</div>

<div class="modal fade" id="ProcessModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <h1>Processing...</h1>
                </div>
            </div>
            <div class="modal-body">
                <div class="col-6">
                    <div class="progress">
                        <div class="bar"></div>
                        <div class="percent">0%</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
        <script src="~/js/jquery-validation/jquery.validate.min.js"></script>
        <script src="~/js/jquery-validation/additional-methods.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
        <script src="~/js/commission_rule.js"></script>

    @*<script src="https://code.jquery.com/jquery-3.1.0.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>*@
        <script>
            //$(function() {
            //    $('#dropDown').select2();
            //});
            $(document).ready(() => {
                
                var mainId = $('#Id').val();
              

            //$("#CommissionRuleDataTable").attr("href", "/CommissionRule/ExportCommissionRuleInstrument?Id=" + mainId);
            
            GetCommissionRuleInstrumentByCommissionRuleId(mainId);
            BindFiledNameDynamic(0);
                //BindIntruments("filter");
                if ($('#ruleconditionjson').val() != undefined) {
                    var rulescondition = JSON.parse($('#ruleconditionjson').val());
                    console.log("rulescondition -" + rulescondition);
                    for (var i = 0; i < rulescondition.length; i++) {
                        if (i > 0) {
                            AddNewRuleDtl();
                            var fieldName = rulescondition[i].FieldName;

                            $("#FieldName_" + i).val(rulescondition[i].FieldName);
                            $("#Opration" + i).val(rulescondition[i].OprationValue);
                            $("#OprationValue_" + i).val(rulescondition[i].OprationValue);

                            $("#objRuleConditions_Dtl_Id_" + i).val(rulescondition[i].Id);
                            $("#objRuleConditions_Id_" + i).val(rulescondition[i].RuleConditionsId);

                            var opration = rulescondition[i].Opration;
                            var oprationValue = rulescondition[i].OprationValue;
                            BindFiledNameDynamic(i, fieldName, opration, oprationValue);
                        }
                        if (i == 0) {
                            BindFiledNameDynamic(i, rulescondition[i].FieldName, rulescondition[i].Opration, rulescondition[i].OprationValue);
                            $("#FieldName_" + i).val(rulescondition[i].FieldName);
                            FieldsNameOnChange(i, rulescondition[i].Opration);
                            $("#OprationValue_" + i).val(rulescondition[i].OprationValue);
                            //$("#OprationIdTemp_" + i).val(response.rulesDtlViewModel[i].oprationValue);
                            $("#objRuleConditions_Dtl_Id_" + i).val(rulescondition[i].Id);
                            $("#objRuleConditions_Id_" + i).val(rulescondition[i].RuleConditionsId);
                        }
                        $("#OprationValue_" + i).val(rulescondition[i].OprationValue);
                    }
                    
                }

                $('#FileUpload').on('change', function (e) {
                    //get the file name
                    var fileName = e.target.files[0].name;
                    $(this).next('.custom-file-label').html(fileName);
                })
                $(document).on("submit", "#frmQuoteMarkUpExcelForm", function (e) {
                    e.preventDefault();
                    //BDMValidation();
                    var form = $(this);
                    form.ajaxSubmit({
                        beforeSubmit: function () {
                            if (!form.valid()) {

                                return false;
                            }
                            else {

                                return true;
                            }
                        },
                        success: function (res) {
                            if (res.code == 200) {
                       

                                NotifyMsg('success', res.message);
                                location.reload();

                            } else {
                      
                                NotifyMsg('success', res.message);
                                location.reload();
                            }
                        },
                        Errors: function () {

                            NotifyMsg('error', res.message);
                        }
                    });
                    return false;
                });
            });
            //function SaveQuoteRule() {
            //   frmValidation();
            //}
            function AddRuleCondition(id) {
                var rulesCount = $('#divRuleDetails').children().length;
                rulesCount = rulesCount / 4;
                var rules = [];
                for (var i = 0; i < rulesCount; i++) {
                    rules.push({ 'FieldName': $('#FieldName_' + i).val(), 'Opration': $('#Opration_' + i).val(), 'OprationValue': $('#OprationValue_' + i).val() });
                }
                var model = {};
                model.RuleId = id;
                model.conditionRulesDtlObj = JSON.stringify(rules);
                $.ajax({
                    type: "POST",
                    url: '/RuleCondition/SaveRuleCondition',
                    data: { 'model': model },
                    success: function (data) {
                        $('.mappingmodal').modal('hide');
                        alert('Data Saved !!');
                        window.location.href = '/QuoteMarkUpRule/Index';
                    }
                });
            }
            function frmValidation() {

                $('#quoteMarkUpRuleForm').validate({
                    rules: {
                        Name: {
                            required: true
                        }
                    },
                    messages: {
                        Name: "Please enter name"
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            }
            function BindFiledNameDynamic(count, defaultVal = "", defaultOp = "", defaultOpValue = "") {
                $.ajax({
                    async: true,
                    type: "POST",
                    url: "@Url.Action("GetUserFieldsForDynamic","LeverageRules")",
                    dataType: 'json',
                    data: { tblName: 'Users' },
                    success: function (response) {
                        $("#FieldName_" + count).append(`<option value="">--Select--</option>`)
                        for (var i = 0; i < response.length; i++) {
                            $("#FieldName_" + count).append(`<option value="${response[i].value}">${response[i].text}</option>`)
                        }
                        if (defaultVal != "") {
                            $("#FieldName_" + count).val(defaultVal);
                            FieldsNameOnChange(count, defaultOp, defaultOpValue);
                        }
                    },
                    error: function (errorTemp) {
                        console.log('error', errorTemp);
                    }
                })
            }
            function FieldsNameOnChange(count, defaultValue = "", defaultOpValue = "") {

                $("#Opration_" + count).html("");
                var selectedVal = $("#FieldName_" + count).val();
                if (selectedVal != undefined) {
                    const myArray = selectedVal.split("|");
                    var FieldName = myArray[0];
                    var DataType = myArray[1];
                    var FkKey = myArray[2];

                    $.ajax({
                        async: true,
                        type: "POST",
                        url: "@Url.Action("GetOprationDropDown","LeverageRules")",
                        data: { FieldsName: FieldName, DataType: DataType, FkKey: FkKey },
                        dataType: 'json',
                        success: function (response) {
                            $("#Opration_" + count).append(`<option value="">--Select--</option>`)
                            for (var i = 0; i < response.length; i++) {
                                $("#Opration_" + count).append(`<option value="${response[i].value}">${response[i].text}</option>`)
                            }

                            if (defaultValue != "") {
                                $("#Opration_" + count).val(defaultValue);
                            }

                            $("#ddlOprationValue_" + count).show();
                            $("#ddlOprationValueTemp_" + count).hide();
                            if (FkKey == "1") {
                                $("#ddlOprationValue_" + count).hide();
                                $("#ddlOprationValueTemp_" + count).show();
                                //}
                                $("#OprationIdTemp_" + count).html("");
                                $.ajax({
                                    async: true,
                                    type: "POST",
                                    url: "@Url.Action("GetTempOprationDropDown","LeverageRules")",
                                    data: { FieldsName: FieldName, DataType: DataType, FkKey: FkKey },
                                    dataType: 'json',
                                    success: function (responseTemp) {
                                        $("#OprationIdTemp_" + count).append(`<option value="">--Select--</option>`)
                                        for (var i = 0; i < responseTemp.length; i++) {
                                            $("#OprationIdTemp_" + count).append(`<option value="${responseTemp[i].value}">${responseTemp[i].text}</option>`)
                                        }
                                        if (defaultOpValue != "") {
                                            $("#OprationIdTemp_" + count).val(defaultOpValue);
                                        }
                                    },
                                    error: function (errorTemp) {
                                        console.log('error', errorTemp);
                                    }
                                })
                            }
                        },
                        error: function (error) {
                            console.log('error', error);

                        }
                    })
                }
            }
            ///Add New rule Dtl
            var countDetails = 0;
            function AddNewRuleDtl() {
                countDetails = countDetails + 1;
                $("#divRuleDetails").append(`
                                            <input id="objRuleConditions_Dtl_Id_${countDetails}" type="hidden">
                                            <input id="objRuleConditions_Id_${countDetails}" type="hidden">
                                        <div class="col-4" id="divField_${countDetails}">
                                            <div class="form-group">
                                            <label>Fields Name</label>
                                            <select id="FieldName_${countDetails}" class="form-control" onchange="FieldsNameOnChange(${countDetails});">
                                            </select>
                                            </div>
                                        </div>
                                        <div class="col-4" id="divOpration_${countDetails}">
                                            <div class="form-group">
                                            <label>Operation</label>
                                            <select id="Opration_${countDetails}" class="form-control">
                                            </select>
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValue_${countDetails}">
                                            <div class="form-group">
                                            <label>Operation Value</label>
                                            <input class="form-control" id="OprationValue_${countDetails}" placeholder="Operation Value" type="text" value="" style="width: 85%;display: inline;">
                                            <a href="javascript:void(0)" value="Delete" onclick="DeleteRule(${countDetails})"><i class="fa fa-trash" style="font-size: large;margin-top: 8px;" aria-hidden="true"></i></a>
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValueTemp_${countDetails}" style="display:none;">
                                            <div class="form-group">
                                                <label>Operation Value</label>
                                                <select id="OprationIdTemp_${countDetails}" name="OprationIdTemp" class="form-control" onchange="ddlOprationValueTempOnChange(${countDetails})" style="width: 85%;display: inline;"></select>
                                                <a href="javascript:void(0)" value="Delete" onclick="DeleteRule(${countDetails})"><i class="fa fa-trash" style="font-size: large;margin-top: 8px;" aria-hidden="true"></i></a>
                                            </div>
                                        </div>
                                        `);
                BindFiledNameDynamic(countDetails)
            };
            function AddNewLPPrio(count, RuleInstrumentId) {
                AddNewLPPrioJs(count, RuleInstrumentId);
            }
            function ddlOprationValueTempOnChange(cnt) {
                //OprationValue
                var selectOprationIdTemp = $("#OprationIdTemp_" + cnt).val();
                $("#OprationValue_" + cnt).val(selectOprationIdTemp);
            }
            function AddInstrumentRule() {
                GetInstrumentWithRuleLpInEditTable();
            }
        function ExportCommissionRuleInstrument(Id) {
            debugger;
          //  $("#Loader").show();
            updateProgress(0);
            var table1 = $('#commissionRule tr').length;


            $("#ProcessModal").modal({ backdrop: 'static', keyboard: false });
            $("#ProcessModal").focus();
            $("#ProcessModal").modal('show');


            var totalCnt = table1;//.fnSettings().fnRecordsTotal()
            var counter = totalCnt / 100;
            counter = Math.round(counter);
            var intervalId = window.setInterval(function () {
                if (counter < 90) {
                    updateProgress(counter);
                    counter = counter + 7;
                }
            }, 50);


            $.ajax({
                type: "POST",
                url: '/CommissionRule/ExportCommissionRuleInstrument?Id=' + Id,
                //contentType: false,
                dataType: "binary",
                processData: false,
                xhrFields: {
                    'responseType': 'blob'
                },
                success: function (res) {
                    debugger
                    const date = new Date();
                    let day = date.getDate();
                    let month = date.getMonth() + 1;
                    let year = date.getFullYear();
                    let currentDate = `${day}_${month}_${year}`;
                    $("#ProcessModal").modal("hide");
                    //updateProgress(0);
                    clearInterval(intervalId);
                    //completeHandler();
                   // $("#Loader").hide();
                    NotifyMsg('success', 'The file is exported');
                    var link = document.createElement('a'),
                        filename = "CommissionRuleInstrument_" + currentDate + ".xlsx";
                    link.href = URL.createObjectURL(res);
                    link.download = filename;
                    link.click();
                    completeHandler();
                    
                },
                error: function (errorTemp) {
                    NotifyMsg('error', errorTemp);
                    console.log('error', errorTemp);
                }
            })
        }
        

            function updateProgress(count) {
                $('.bar').css('width', count + '%');
                $('.percent').text(count + '%');
            }
            function completeHandler() {
                $('.bar').width("100%");
                $('.percent').html("100%");
                $("#ProcessModal").modal('hide');
            }
    
        </script>
 }

