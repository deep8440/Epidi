@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
  
    ViewBag.Method = "BDM";
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                       @* <h3>BDM Details</h3>*@
                    </div>
                    <div class="col-6">
                        <button id="btnAddBDM" type="button" class="btn btn-outline-primary btn-uppercase float-right">
                            <i class="ti-plus mr-2"></i> Create BDM
                        </button>
                    </div>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <table id="BDMList" class="table table-bordered table-striped">
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>
<div class="modal viewBDMmodal" tabindex="-1" role="dialog" id="btnMapModal">
    <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModelTitleLable">BDM</h5>

            </div>

            <div class="modal-body ViewBDMmodalbody">
                <div class="row">
                    <div class="col-md-6 form-group">
                        <label>BDM Name</label>
                        <input type="text" readonly class="form-control" id="txtbdmname" />
                    </div>
                     <div class="col-md-6 form-group">
                        <label>MIB Name</label>
                        <input type="text" readonly class="form-control" id="txtMIBname" />
                    </div>
                     <div class="col-md-6 form-group">
                        <label>IB Name</label>
                        <input type="text" readonly class="form-control" id="txtIBname" />
                    </div>
                     <div class="col-md-6 form-group">
                        <label>Markup per 1000</label>
                        <input type="text" readonly class="form-control" id="txtmarkup" />
                    </div>
                     <div class="col-md-6 form-group">
                        <label>Markup(%)</label>
                        <input type="text" readonly class="form-control" id="txtmarkupperc" />
                    </div>
                     <div class="col-md-6 form-group">
                        <label>Buy swap per 1000</label>
                        <input type="text" readonly class="form-control" id="txtbuyswapper" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label>Buy swap(%)</label>
                        <input type="text" readonly class="form-control" id="txtbuyswap" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label>Sell swap per 1000</label>
                        <input type="text" readonly class="form-control" id="txtsellswapper" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label>Sell swap(%)</label>
                        <input type="text" readonly class="form-control" id="txtsellswap" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
               @* <input id="btnSave" type="button" onclick="Updatespecification();" class="btn btn-primary saveBtn" value="Save" />
                <button class="btn btn-primary loading" type="button" disabled style="display:none;float:right;">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Saving...
                </button>*@
                <button type="button" onclick="ResetValues()" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>


        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/js/jquery-validation/additional-methods.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script>


        $(document).ready(() => {
            $('#CommitionDetails').hide();
            $('#BDMList').on('draw.dt', function () {
                $('[data-toggle="tooltip"]').tooltip();
            });

            $("body").on("click", "#btnAddBDM", function () {

                AddModal("/BDM/AddBDM", "Add New BDM")
            });
            $("body").on("click", "#btnAddIB", function () {

                AddModal("/IB/AddIB?BDMId=-1", "Add New IB")
            });

            BDMDataTable.init('');


            $(document).on("submit", "#bdmForm", function (e) {
                e.preventDefault();
                BDMValidation();
                var form = $(this);
                form.ajaxSubmit({
                    beforeSubmit: function () {
                        if (!form.valid()) {

                            return false;
                        }
                        else {

                            return true;
                        }
                    },
                    success: function (res) {
                        if (res.code == 200) {
                            $("#frmModel").modal('hide');
                            $("#bdmForm").resetForm();

                            BDMDataTable.init('', '', '', '');

                            NotifyMsg('success', res.message);

                        } else {

                            NotifyMsg('error', res.message);
                        }
                    },
                    Errors: function () {

                        NotifyMsg('error', res.message);
                    }
                });
                return false;
            });
            $(document).on("submit", "#ibForm", function (e) {
                e.preventDefault();
                //BDMValidation();
                var form = $(this);
                form.ajaxSubmit({
                    beforeSubmit: function () {
                        if (!form.valid()) {

                            return false;
                        }
                        else {

                            return true;
                        }
                    },
                    success: function (res) {
                        if (res.code == 200) {
                            $("#frmModel").modal('hide');
                            $("#ibForm").resetForm();

                            //BDMDataTable.init('', '', '', '');

                            NotifyMsg('success', res.message);

                        } else {

                            NotifyMsg('error', res.message);
                        }
                    },
                    Errors: function () {

                        NotifyMsg('error', res.message);
                    }
                });
                return false;
            });
        });

        function BDMValidation() {
            $('#bdmForm').validate({
                rules: {
                    Name: {
                        required: true
                    }
                },
                messages: {
                    Name: "Please enter name"
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        }
var BDMDataTable = function (Name) {
            let initTable1 = function () {
                let table = $('#BDMList');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '/BDM/Get_All',
                        type: "post",
                        data: { Name: Name }
                    },

                    "columns": [
                        {
                            "title": "BDM Name", "data": "bdmName", "orderable": false, "width": "24%"
                        },
                        {
                            "title": "MIB Name", "data": "ibName",
                            "render": function (data, type, row) {
                                if (row.id == undefined || row.id == 0) {
                                    return "";
                                }
                                else {
                                    return row.ibName;
                                }
                            },
                            "orderable": false, "width": "39%"
                        },
                        {
                            "title": "IB Name", "data": "ibName",
                            "render": function (data, type, row) {
                                if (row.id == undefined || row.id == 0) {
                                    return row.ibName;
                                }
                                else {
                                    return "";
                                }
                            },
                            "orderable": false, "width": "30%"
                        },
                        {
                            "title": "MarkUp Per 1000", "data": "markUpPer1000",
                            "render": function (data, type, row) {
                                if (row.bdmid == undefined || row.bdmid == 0) {
                                    return "";
                                }
                                else {
                                    var html = "<div class='form-group'>";
                                    html += "<input style='width:65px;' id='markUpPer1000" + row.id + "' class='form-control' type='text' value=" + row.markUpPer1000 + ">";
                                    html += "</div>";
                                    return html;
                                }
                            }
                            , "orderable": false, "width": "10%"
                        },
                        {
                            "title": "MarkUp (%)", "data": "markUpPer",
                            "render": function (data, type, row) {
                                if (row.bdmid == undefined || row.bdmid == 0) {
                                    return "";
                                }
                                else {
                                    var html = "<div class='form-group'>";
                                    html += "<input style='width:65px;' id='markUpPer" + row.id + "' class='form-control' type='text' value=" + row.markUpPer + ">";
                                    html += "</div>";
                                    return html;
                                }
                            }
                            , "orderable": false, "width": "10%"
                        },
                        {
                            "title": "Buy Swap Per 1000", "data": "buySwapPer1000",
                            "render": function (data, type, row) {
                                if (row.bdmid == undefined || row.bdmid == 0) {
                                    return "";
                                }
                                else {
                                    var html = "<div class='form-group'>";
                                    html += "<input style='width:70px;' id='buySwapPer1000" + row.id + "' class='form-control' type='text' value=" + row.buySwapPer1000 + ">";
                                    html += "</div>";
                                    return html;
                                }
                            }
                            , "orderable": false, "width": "10%"
                        },
                        {
                            "title": "BuySwap (%)", "data": "buySwapPer",
                            "render": function (data, type, row) {
                                if (row.bdmid == undefined || row.bdmid == 0) {
                                    return "";
                                }
                                else {
                                    var html = "<div class='form-group'>";
                                    html += "<input style='width:65px;' id='buySwapPer" + row.id + "' class='form-control' type='text' value=" + row.buySwapPer + ">";
                                    html += "</div>";
                                    return html;
                                }
                            }
                            , "orderable": false, "width": "15%"
                        },
                        {
                            "title": "SellSwap Per 1000", "data": "sellSwapPer1000",
                            "render": function (data, type, row) {
                                if (row.bdmid == undefined || row.bdmid == 0) {
                                    return "";
                                }
                                else {
                                    var html = "<div class='form-group'>";
                                    html += "<input style='width:65px;' id='sellSwapPer1000" + row.id + "' class='form-control' type='text' value=" + row.sellSwapPer1000 + ">";
                                    html += "</div>";
                                    return html;
                                }
                            }
                            , "orderable": false, "width": "15%"
                        },
                        {
                            "title": "SellSwap (%)", "data": "sellSwapPer",
                            "render": function (data, type, row) {
                                if (row.bdmid == undefined || row.bdmid == 0) {
                                    return "";
                                }
                                else {
                                    var html = "<div class='form-group'>";
                                    html += "<input style='width:65px;' id='sellSwapPer" + row.id + "' class='form-control' type='text' value=" + row.sellSwapPer + ">";
                                    html += "</div>";
                                    return html;
                                }
                            }
                            , "orderable": false, "width": "15%"
                        },
                        {
                            "title": "Action", "data": "id",
                            "render": function (data, type, row) {
                                var html = "<div style='width:75px;' class='social-auth-links text-center'>";
                                //if (row.ibId > 0 && row.masterInstrumentalId == 0) {
                                    
                                html += "<a class='btn btn-sm btn-success mr-1' href='javascript:void(0)' title='IB Details' onclick='Updatedata(" + row.bdmid + ",\"" + row.id + "\",$(this));' ><i class='fa fa-edit'></i></a>";
                                html += "<a class='btn btn-sm btn-primary mr-1' href='javascript:void(0)' title='IB Details' onclick='OpenIBIntrumentalCommision(" + row.ibId + ",\"" + row.ibName + "\",$(this));' ><i class='fa fa-eye'></i></a>";
                                //}
                                html += "</div>";
                                return html;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    //"dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                init: function (UserId, FromDate, ToDate, Type) {
                    if ($.fn.DataTable.isDataTable("#BDMList")) {
                        $('#BDMList').dataTable().fnDestroy();
                        userId = UserId;
                        fromDate = FromDate;
                        toDate = ToDate;
                        type = Type;
                        //$('#divUserTable').html('<table class="table table-striped" width="100%" id="UserTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        function AddFilter() {

            var name = $('#name').val();

            BDMDataTable.init(name);

        }        
        function OpenIBIntrumentalCommision(Id, Name,obj) {
            debugger;
            $('.viewBDMmodal').modal('show');
            $('#txtbdmname').val($(obj).closest('tr').find('td:eq(0)').html());
            $('#txtMIBname').val($(obj).closest('tr').find('td:eq(1)').html());
            $('#txtIBname').val($(obj).closest('tr').find('td:eq(2)').html());
            var val=$(obj).closest('tr').find('td:eq(3)').html().split('=');
            $('#txtmarkup').val(val[5].replace('></div>', '').replace('"', '').replace('"', ''));
            val=$(obj).closest('tr').find('td:eq(4)').html().split('=');
            $('#txtmarkupperc').val(val[4].replace('></div>', '').replace('"', '').replace('"', ''));
            val = $(obj).closest('tr').find('td:eq(5)').html().split('=');
            $('#txtbuyswapper').val(val[4].replace('></div>', '').replace('"', '').replace('"', ''));
            val = $(obj).closest('tr').find('td:eq(6)').html().split('=');
            $('#txtbuyswap').val(val[4].replace('></div>', '').replace('"', '').replace('"', ''));
            val = $(obj).closest('tr').find('td:eq(7)').html().split('=');
            $('#txtsellswapper').val(val[4].replace('></div>', '').replace('"', '').replace('"', ''));
            val = $(obj).closest('tr').find('td:eq(8)').html().split('=');
            $('#txtsellswap').val(val[4].replace('></div>', '').replace('"', '').replace('"', ''));
            
           
        }
        function IBDetailsUrl(Id, Name) {
            window.location.href = "/IB/Index?BDMId=" + Id + "&name=" + Name;
        }

        function Updatedata(bdmid, id, obj) {
            debugger;
            var txtmarkup = $("#markUpPer1000" + id).val();
            var txtmarkupperc = $("#markUpPer" + id).val();
            var txtbuyswapper = $("#buySwapPer1000" + id).val();
            var txtbuyswap = $("#buySwapPer" + id).val();
            var txtsellswapper = $("#sellSwapPer1000" + id).val();
            var txtsellswap = $("#sellSwapPer" + id).val();

            var modelobj =
            {
                markUpPer1000: txtmarkup,
                markUpPer:txtmarkupperc,
                buySwapPer1000:txtbuyswapper,
                buySwapPer:txtbuyswap,
                sellSwapPer1000:txtsellswapper,
                sellSwapPer: txtsellswap,
                BDMID: bdmid
            };

            if (confirm('Are you sure you want to update this record')) {
                $.ajax({
                    type: "POST",
                    async: false,
                    url: '/BDM/SaveBDMCommision',
                    data: {model:modelobj},
                    success: function (data) {



                        alert('Record Updated !!');



                    }
                });
            }
        }
    </script>
}