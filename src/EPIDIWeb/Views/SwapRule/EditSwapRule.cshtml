@model SwapRuleViewModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "Edit Swap Rule";
    ViewBag.Method = "Edit SwapRule";
    

    ViewBag.DetailName = "Swap Rule";
    ViewBag.DetailURL = "/SwapRule/Index";

}
<style>
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    .select2-container {
        display: block;
    }

    h3 {
        color: #dc3545 !important;
        font-weight: bold;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-12">
                        <h3>Swap Rule</h3>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-3">
                        <div class="form-group">

                            <input type="hidden" id="InstrumentsList" value="@ViewBag.Instruments" />
                            <input type="hidden" id="SymbolList" value="@ViewBag.SymbolGroups" />

                            @*<input type="hidden" id="lpRulesPriorityData" />*@
                            <input type="hidden" id="rulesCondtionData" />
                            <input type="hidden" id="instrumentData" />
                            @Html.HiddenFor(model => model.Id,"Id")
                            @Html.LabelFor(model => model.RuleName, "RuleName")
                            @Html.TextBoxFor(p => p.RuleName, new { @class = "form-control", @placeholder = "RuleName" ,@name="RuleName"})
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @*<input type="hidden" id="lpRulesPriorityData" />*@
                            <input type="hidden" id="rulesCondtionData" />
                            <input type="hidden" id="instrumentData" />
                            @Html.HiddenFor(model => model.Id,"Id")
                            @Html.LabelFor(model => model.Comment, "Comment")
                            @Html.TextBoxFor(p => p.Comment, new { @class = "form-control", @placeholder = "Comment" ,@name="Comment"})
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Priority, "Priority")
                            @Html.TextBoxFor(p => p.Priority, new { @class = "form-control", @placeholder = "Priority" ,@name="Priority"})
                           
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TimeToApply, "TimeToApply")
                            @Html.TextBoxFor(p => p.TimeToApply, new {@type="time",@step=2 ,@class = "form-control", @placeholder = "TimeToApply" ,@name="TimeToApply"})

                        </div>
                    </div>
                    @*<div>
                        @if (Model.objRuleConditionViewModel != null && Model.objRuleConditionViewModel.conditionRulesDtlObj != "")
                        {
                            <input type="hidden" id="ruleconditionjson" value="@Model.objRuleConditionViewModel.conditionRulesDtlObj" />
                        }
                    </div>*@
                    <div class="row">
                        @using (Html.BeginForm("SaveSwapRule", "SwapRule", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmQuoteMarkUpExcelForm" }))//onsubmit = "return myFunction()"
                        {
                            @Html.HiddenFor(model => model.Id,"Id")
                            <div class="row">
                                @if (Model.objRuleConditionViewModel != null && Model.objRuleConditionViewModel.conditionRulesDtlObj != "")
                                {
                                    <input type="hidden" id="ruleconditionjson" value="@Model.objRuleConditionViewModel.conditionRulesDtlObj" />
                                }
                                <div class="col-3" id="divUploadFile" style="padding-left:0px;">
                                    <div class="custom-file form-group" style="width:200px">
                                        <input type="file" id="FileUpload" name="FileUpload" class="custom-file-input">
                                        <label id="lblRule" class="custom-file-label" style="text-align:left" for="file">Choose File</label>
                                    </div>
                                </div>
                                <div class="col-2 text-right" style="padding-bottom:10px;">
                                    <button type="submit" id="importToExcel" class="form-control btn btn-info" style="width:140px;">Import to Excel</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div id="accordion">
                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title w-100">
                                <a class="d-block w-100 collapsed" data-toggle="collapse" href="#collapseOne" aria-expanded="false">
                                    Instrument Rules
                                </a>
                            </h3>
                        </div>
                        <div id="collapseOne" class="collapse show" data-parent="#accordion" style="overflow:auto">
                            <div class="card-body">
                                @*<div class="row">
                                    <div class="col-3">
                                        <label>Instruments</label>
                                        <select class="form-control" id="instrumentid_filter" style="border:1px solid;">
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label>LP</label>
                                        <select class="form-control" id="objRuleLpPriorityViewModel_LPId_filter" style="border:1px solid;">
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label>Day</label>
                                        <select class="form-control" id="day_filter" style="border:1px solid;">
                                            <option value="0">--Select--</option>
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                            <option value="3">3</option>
                                            <option value="4">4</option>
                                            <option value="5">5</option>
                                            <option value="6">6</option>
                                            <option value="7">7</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group mt-3">
                                            <button type="button" onclick="btnSearchClick();" id="Search" class="btn btn-info mt-3">Search</button>
                                        </div>
                                    </div>
                                </div>*@
                                <div id="DivInstrument">
                                    <table id="tblSwapRueInstrument">
                                     @*   <tr>
                                            <th>#</th>
                                            <th>InstrumentName</th>
                                            <th>SymbolGroup</th>
                                            <th>BuySwapPer$1000Notional($)</th>
                                            <th>SellSwapPerNotional$1000($)</th>
                                            <th>BuySwap(%)Notional</th>
                                            <th>SellSwap(%)Notional</th>
                                            <th>TrippleSwapsDay</th>
                                            <th>DaystoApply</th>
                                            <th>RoundingBuy</th>
                                            <th>RoundingSell</th>
                                            <th>DecimalCut</th>
                                            <th>Priority</th>
                                            <th>Action</th>
                                        </tr>*@
                                    </table>
                                </div>

                                <div class="row col-12 mt-1" style="float: right;">
                                    <div class="form-group">
                                        <button type="button" onclick="AddSwapRuleInstrument();" id="addnewSwapRuleInstrument" class="btn btn-primary">Add Swap Rule Instrument </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-info">
                        <div class="card-header">
                            <h4 class="card-title w-100">
                                <a class="d-block w-100" data-toggle="collapse" href="#collapseThree">
                                    Rule Condition
                                </a>
                            </h4>
                        </div>
                        <div id="collapseThree" class="collapse" data-parent="#accordion">
                            <div class="card-body">
                                <div class="col-12">
                                    <div class="row" id="divRuleDetails">
                                        <input id="objRuleConditions_Dtl_Id_0" type="hidden" class="form-control">
                                        <input id="objRuleConditions_Id_0" type="hidden" class="form-control">
                                        <div class="col-4">
                                            <div class="form-group">
                                                <label>Fields Name</label>
                                                @if (Model.objRuleConditionViewModel != null && Model.objRuleConditionViewModel.conditionRulesDtlObj != "")
                                                {
                                                        <input type="hidden" id="ruleconditionjson" value="@Model.objRuleConditionViewModel.conditionRulesDtlObj" />
                                                }
                                                <select id="FieldName_0" name="FieldName_0" class="form-control" onchange="FieldsNameOnChange(0);">
                                                    @* @foreach (var filed in ViewBag.UserFieldsList)
                                                    {
                                                    <option value="@filed.Value">@filed.Text</option>
                                                    }*@
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="form-group">
                                                <label>Operation</label>
                                                <select id="Opration_0" name="Opration" class="form-control"></select>
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValue_0">
                                            <div class="form-group">
                                                <label>Operation Value</label>
                                                <input type="text" id="OprationValue_0" name="OprationValue_0" class="form-control" placeholder="Operation Value" />
                                                @*@Html.TextBoxFor(p => p.OprationValue, new { @class = "form-control", @placeholder = "Opration Value"
                                                ,@name="OprationValue",Id = "OprationValue_0"})*@
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValueTemp_0" style="display:none;">
                                            <div class="form-group">
                                                <label>Operation Value</label>
                                                <select id="OprationIdTemp_0" name="OprationIdTemp" onchange="ddlOprationValueTempOnChange(0)" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row col-12 mt-1">
                                        @*style="float: right;"*@
                                        <div class="form-group">
                                            <button type="button" onclick="AddNewRuleDtl();" id="addnewCondition" class="btn btn-primary">Add Condition</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <h3></h3>
                    </div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <h3></h3>
                    </div>
                </div>

                <div class="card-header">
                    <div class="row">
                        <div class="col-6">
                            <h3></h3>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button onclick="SaveSwapRuleData();" class="btn btn-primary">Save</button>
        </div>
    </div>
</div>

@section Scripts{
        <script src="~/js/jquery-validation/jquery.validate.min.js"></script>
        <script src="~/js/jquery-validation/additional-methods.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
        <script src="~/js/swap_rule.js"></script>

    @*<script src="https://code.jquery.com/jquery-3.1.0.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>*@
        <script>
            //$(function() {
            //    $('#dropDown').select2();
            //});

            $(document).ready(() => {
                var mainId = $('#Id').val();
                
                GetSwapRuleInstrumentBySwapRuleId(mainId);
                BindFiledNameDynamic(0);
                //BindIntruments("filter");
                if ($('#ruleconditionjson').val() != undefined) {
                    var rulescondition = JSON.parse($('#ruleconditionjson').val());
                    console.log("rulescondition -" + rulescondition);
                    for (var i = 0; i < rulescondition.length; i++) {
                        if (i > 0) {
                            AddNewRuleDtl();
                            var fieldName = rulescondition[i].FieldName;

                            $("#FieldName_" + i).val(rulescondition[i].FieldName);
                            $("#Opration" + i).val(rulescondition[i].OprationValue);
                            $("#OprationValue_" + i).val(rulescondition[i].OprationValue);

                            $("#objRuleConditions_Dtl_Id_" + i).val(rulescondition[i].Id);
                            $("#objRuleConditions_Id_" + i).val(rulescondition[i].RuleConditionsId);

                            var opration = rulescondition[i].Opration;
                            var oprationValue = rulescondition[i].OprationValue;
                            BindFiledNameDynamic(i, fieldName, opration, oprationValue);
                        }
                        if (i == 0) {
                            BindFiledNameDynamic(i, rulescondition[i].FieldName, rulescondition[i].Opration, rulescondition[i].OprationValue);
                            $("#FieldName_" + i).val(rulescondition[i].FieldName);
                            FieldsNameOnChange(i, rulescondition[i].Opration);
                            $("#OprationValue_" + i).val(rulescondition[i].OprationValue);
                            //$("#OprationIdTemp_" + i).val(response.rulesDtlViewModel[i].oprationValue);
                            $("#objRuleConditions_Dtl_Id_" + i).val(rulescondition[i].Id);
                            $("#objRuleConditions_Id_" + i).val(rulescondition[i].RuleConditionsId);
                        }
                        $("#OprationValue_" + i).val(rulescondition[i].OprationValue);
                    }
                    
                }

                $('#FileUpload').on('change', function (e) {
                    //get the file name
                    var fileName = e.target.files[0].name;
                    $(this).next('.custom-file-label').html(fileName);
                })
                $(document).on("submit", "#frmQuoteMarkUpExcelForm", function (e) {
                    e.preventDefault();
                    $("#Loader").show();
                    //BDMValidation();
                    var form = $(this);
                    form.ajaxSubmit({
                        beforeSubmit: function () {
                            if (!form.valid()) {

                                return false;
                            }
                            else {

                                return true;
                            }
                        },
                        success: function (res) {
                            if (res.code == 200) {
                                debugger;

                                NotifyMsg('success', res.message);
                                location.reload();
                                $("#Loader").hide();
                            } else {
                                debugger;
                                NotifyMsg('success', res.message);
                                location.reload();
                                $("#Loader").hide();
                            }
                        },
                        Errors: function () {

                            NotifyMsg('error', res.message);
                            $("#Loader").hide();
                        }
                    });
                    return false;
                });
            });
            //function SaveQuoteRule() {
            //   frmValidation();
            //}
            function AddRuleCondition(id) {
                var rulesCount = $('#divRuleDetails').children().length;
                rulesCount = rulesCount / 4;
                var rules = [];
                for (var i = 0; i < rulesCount; i++) {
                    rules.push({ 'FieldName': $('#FieldName_' + i).val(), 'Opration': $('#Opration_' + i).val(), 'OprationValue': $('#OprationValue_' + i).val() });
                }
                var model = {};
                model.RuleId = id;
                model.conditionRulesDtlObj = JSON.stringify(rules);
                $.ajax({
                    type: "POST",
                    url: '/RuleCondition/SaveRuleCondition',
                    data: { 'model': model },
                    success: function (data) {
                        $('.mappingmodal').modal('hide');
                        alert('Data Saved !!');
                        window.location.href = '/QuoteMarkUpRule/Index';
                    }
                });
            }
            function frmValidation() {

                $('#quoteMarkUpRuleForm').validate({
                    rules: {
                        Name: {
                            required: true
                        }
                    },
                    messages: {
                        Name: "Please enter name"
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            }
            function BindFiledNameDynamic(count, defaultVal = "", defaultOp = "", defaultOpValue = "") {
                $.ajax({
                    async: true,
                    type: "POST",
                    url: "@Url.Action("GetUserFieldsForDynamic","LeverageRules")",
                    dataType: 'json',
                    data: { tblName: 'Users' },
                    success: function (response) {
                        $("#FieldName_" + count).append(`<option value="">--Select--</option>`)
                        for (var i = 0; i < response.length; i++) {
                            $("#FieldName_" + count).append(`<option value="${response[i].value}">${response[i].text}</option>`)
                        }
                        if (defaultVal != "") {
                            $("#FieldName_" + count).val(defaultVal);
                            FieldsNameOnChange(count, defaultOp, defaultOpValue);
                        }
                    },
                    error: function (errorTemp) {
                        console.log('error', errorTemp);
                    }
                })
            }
            function FieldsNameOnChange(count, defaultValue = "", defaultOpValue = "") {

                $("#Opration_" + count).html("");
                var selectedVal = $("#FieldName_" + count).val();
                if (selectedVal != undefined) {
                    const myArray = selectedVal.split("|");
                    var FieldName = myArray[0];
                    var DataType = myArray[1];
                    var FkKey = myArray[2];

                    $.ajax({
                        async: true,
                        type: "POST",
                        url: "@Url.Action("GetOprationDropDown","LeverageRules")",
                        data: { FieldsName: FieldName, DataType: DataType, FkKey: FkKey },
                        dataType: 'json',
                        success: function (response) {
                            $("#Opration_" + count).append(`<option value="">--Select--</option>`)
                            for (var i = 0; i < response.length; i++) {
                                $("#Opration_" + count).append(`<option value="${response[i].value}">${response[i].text}</option>`)
                            }

                            if (defaultValue != "") {
                                $("#Opration_" + count).val(defaultValue);
                            }

                            $("#ddlOprationValue_" + count).show();
                            $("#ddlOprationValueTemp_" + count).hide();
                            if (FkKey == "1") {
                                $("#ddlOprationValue_" + count).hide();
                                $("#ddlOprationValueTemp_" + count).show();
                                //}
                                $("#OprationIdTemp_" + count).html("");
                                $.ajax({
                                    async: true,
                                    type: "POST",
                                    url: "@Url.Action("GetTempOprationDropDown","LeverageRules")",
                                    data: { FieldsName: FieldName, DataType: DataType, FkKey: FkKey },
                                    dataType: 'json',
                                    success: function (responseTemp) {
                                        $("#OprationIdTemp_" + count).append(`<option value="">--Select--</option>`)
                                        for (var i = 0; i < responseTemp.length; i++) {
                                            $("#OprationIdTemp_" + count).append(`<option value="${responseTemp[i].value}">${responseTemp[i].text}</option>`)
                                        }
                                        if (defaultOpValue != "") {
                                            $("#OprationIdTemp_" + count).val(defaultOpValue);
                                        }
                                    },
                                    error: function (errorTemp) {
                                        console.log('error', errorTemp);
                                    }
                                })
                            }
                        },
                        error: function (error) {
                            console.log('error', error);

                        }
                    })
                }
            }
            ///Add New rule Dtl
            var countDetails = 0;
            function AddNewRuleDtl() {
                countDetails = countDetails + 1;
                $("#divRuleDetails").append(`
                                            <input id="objRuleConditions_Dtl_Id_${countDetails}" type="hidden">
                                            <input id="objRuleConditions_Id_${countDetails}" type="hidden">
                                        <div class="col-4" id="divField_${countDetails}">
                                            <div class="form-group">
                                            <label>Fields Name</label>
                                            <select id="FieldName_${countDetails}" class="form-control" onchange="FieldsNameOnChange(${countDetails});">
                                            </select>
                                            </div>
                                        </div>
                                        <div class="col-4" id="divOpration_${countDetails}">
                                            <div class="form-group">
                                            <label>Operation</label>
                                            <select id="Opration_${countDetails}" class="form-control">
                                            </select>
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValue_${countDetails}">
                                            <div class="form-group">
                                            <label>Operation Value</label>
                                            <input class="form-control" id="OprationValue_${countDetails}" placeholder="Operation Value" type="text" value="" style="width: 85%;display: inline;">
                                            <a href="javascript:void(0)" value="Delete" onclick="DeleteRule(${countDetails})"><i class="fa fa-trash" style="font-size: large;margin-top: 8px;" aria-hidden="true"></i></a>
                                            </div>
                                        </div>
                                        <div class="col-4" id="ddlOprationValueTemp_${countDetails}" style="display:none;">
                                            <div class="form-group">
                                                <label>Operation Value</label>
                                                <select id="OprationIdTemp_${countDetails}" name="OprationIdTemp" class="form-control" onchange="ddlOprationValueTempOnChange(${countDetails})" style="width: 85%;display: inline;"></select>
                                                <a href="javascript:void(0)" value="Delete" onclick="DeleteRule(${countDetails})"><i class="fa fa-trash" style="font-size: large;margin-top: 8px;" aria-hidden="true"></i></a>
                                            </div>
                                        </div>
                                        `);
                BindFiledNameDynamic(countDetails)
            };
            function AddNewLPPrio(count, RuleInstrumentId) {
                AddNewLPPrioJs(count, RuleInstrumentId);
            }
            function ddlOprationValueTempOnChange(cnt) {
                //OprationValue
                var selectOprationIdTemp = $("#OprationIdTemp_" + cnt).val();
                $("#OprationValue_" + cnt).val(selectOprationIdTemp);
            }
            function AddInstrumentRule() {
                GetInstrumentWithRuleLpInEditTable();
            }

        function AddSwapRuleInstrument() {

            GetInstrumentWithSwapRuleEditTable();


            //$('#AddSwapRuleInstrument').on('click', function () {
            //    SwapRuleDataTable.row.add(['' /* Location */, 0 /*Tap count */]).draw();
 }

        </script>
 }

