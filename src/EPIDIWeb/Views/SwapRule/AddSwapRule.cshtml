@model SwapRuleViewModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "Add Swap Rule";
    ViewBag.Method = "Add Swap Rule";

    ViewBag.DetailName = "Swap Rule";
    ViewBag.DetailURL = "/SwapRule/Index";


}
<style>
    .select2-container {
        display: block;
    }

    h3 {
        color: #dc3545 !important;
        font-weight: bold;
    }
</style>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3>Add Swap Rule</h3>
            </div>
            @using (Html.BeginForm("SaveSwapRule", "SwapRule", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmAddSwapRule" }))//onsubmit = "return myFunction()"
            {
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.HiddenFor(p => p.Id)
                                @Html.LabelFor(model => model.RuleName,"RuleName")
                                @Html.TextBoxFor(p => p.RuleName, new { @class = "form-control", @placeholder = "RuleName" ,@name="RuleName" })
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                @Html.HiddenFor(p => p.Id)
                                @Html.LabelFor(model => model.Comment,"Comment")
                                @Html.TextBoxFor(p => p.Comment, new { @class = "form-control", @placeholder = "Comment" ,@name="Comment" })
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Priority, "Priority")
                                @Html.TextBoxFor(p => p.Priority, new { @class = "form-control", @placeholder = "Priority" ,@name="Priority" })

                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TimeToApply,"TimeToApply")
                                @Html.TextBoxFor(p => p.TimeToApply, new {@type="time",@step=2 ,@class = "form-control", @placeholder = "TimeToApply" ,@name="TimeToApply"})
                            </div>
                        </div>
                        <div class="col-6" id="divUploadFile">

                            <div class="custom-file form-group float-sm-left mr-3" style="width:230px">
                                <input type="file" id="FileUpload" name="FileUpload" class="custom-file-input">
                                <label id="lblRule" class="custom-file-label" style="text-align:left" for="file">Choose File</label>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(() => {
            $('#FileUpload').on('change', function (e) {
                //get the file name
                var fileName = e.target.files[0].name;
                $(this).next('.custom-file-label').html(fileName);
            })
            $(document).on("submit", "#frmAddSwapRule", function (e) {
                e.preventDefault();
                SwapRuleValidation();
                var form = $(this);
                $("#Loader").show();
                form.ajaxSubmit({
                    beforeSubmit: function () {
                        if (!form.valid()) {
                            return false;
                        }
                        else {
                            return true;
                        }
                    },
                    success: function (res) {
                        debugger;
                        if (res.statusCode == 200) {
                            $('#FileUpload').val('');
                            $('#lblRule').html('Choose File')
                            $("#Loader").hide();
                            NotifyMsg('success', res.message);
                            //$('#Id').val(res.response.id);
                            //$('#divRuleCondition').show();
                            //$('#divUploadFile').hide();
                            setTimeout(function () {
                                NotifyMsg('success', res.message);
                            }, 2000);
                            window.location.href = "/SwapRule/Edit?Id=" + res.data;
                        } else {
                            NotifyMsg('error', res.message);
                        }
                    },
                    Errors: function () {
                        $("#Loader").hide();
                        console.log('error', res.message);
                        NotifyMsg('error', res.message);
                    }
                });
                return false;
            });

            function SwapRuleValidation() {
                $('#frmAddSwapRule').validate({
                    rules: {
                        TimeToApply: { step: false }

                    },
                    messages: {
                        Name: "Please enter name"
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            }

        });
    </script>
}