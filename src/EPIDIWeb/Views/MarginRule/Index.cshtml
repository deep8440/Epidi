@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "Margin Rule";
    ViewBag.Method = "Margin Rule";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                @*Margin Rule*@
            <div>
                <button id="btnAddMarginRule" type="button" class="btn btn-outline-primary btn-uppercase float-right">
                     Add Margin Rule
                </button>
                @*<i class="ti-plus mr-2"></i>*@
            </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <table id="marginRuleList" class="table table-bordered table-striped">
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>



@section Scripts{
    <script>

        $(document).ready(() => {

            $("body").on("click", "#btnAddMarginRule", function () {
                window.location.href = "/MarginRule/AddMarginRule"; 
            });

            MarginRuleDataTable.init();
            GetMarginTypes();
            $('#ddlmargintype').on('change', function () {
                if ($(this).val() > 1) {
                    $('#ddlmargintypeval').css('display', 'block');
                    $('#txtinstrumentend').css('display', 'none');
                    if ($(this).val() == 2) {
                        GetInstruments();
                        $('#lblmargintypecontrol').html('Instrument');
                    }
                    if ($(this).val() == 3) {
                        GetSymbolGroups();
                        $('#lblmargintypecontrol').html('Symbol Group');
                    }

                }
                else {
                    $('#ddlmargintypeval').css('display', 'none');
                    $('#txtinstrumentend').css('display', 'block');
                    $('#lblmargintypecontrol').html('Instrument End');
                }
            })
        });
        function AddEditMappingModal(obj) {
            $('#ddlmargintype').val($(obj).closest('tr').find('input[name="marginTypeId"]').val());
            $('#ddlmargintype').change();
            $('.marginmodal').modal('show');
            $('#masteritem').val($(obj).closest('tr').find('td:eq(0)').text());
            $('#marginid').val($(obj).closest('tr').find('input[type="hidden"]').val());


            if ($('#ddlmargintype').val() == 2) {
                $('#ddlmargintypeval').val($(obj).closest('tr').find('input[name="masterInstrumentId"]').val());
            }
            if ($('#ddlmargintype').val() == 3) {
                $('#ddlmargintypeval').val($(obj).closest('tr').find('input[name="symbolGroupId"]').val());
            }
            debugger;
            $('#InstrumentConversiontoUSD').val($(obj).closest('tr').find('td:eq(3)').html());
            $('#InstrumentConversiontoEUR').val($(obj).closest('tr').find('td:eq(4)').html());
        }
        function SaveMapping() {
            var marginViewModel = {};
            marginViewModel.MarginId = $('#marginid').val();
            marginViewModel.MarginTypeId = $('#ddlmargintype').val();
            if ($('#ddlmargintype').val() == 1) {
                marginViewModel.InstrumentEnd = $('#txtinstrumentend').val();
            }
            if ($('#ddlmargintype').val() == 2) {
                marginViewModel.MasterInstrumentId = $('#ddlmargintypeval').val();
            }
            if ($('#ddlmargintype').val() == 3) {
                marginViewModel.SymbolGroupId = $('#ddlmargintypeval').val();
            }
            marginViewModel.InstrumentConversiontoUSD = $('#InstrumentConversiontoUSD').val();
            marginViewModel.InstrumentConversiontoEUR = $('#InstrumentConversiontoEUR').val();
            marginViewModel.InstrumentConversiontoINR = $('#InstrumentConversiontoINR').val();
            marginViewModel.ManualInstrumentConversiontoUSD = $('#ManualInstrumentConversiontoUSD').val();
            marginViewModel.ManualInstrumentConversiontoEUR = $('#ManualInstrumentConversiontoEUR').val();
            marginViewModel.ManualInstrumentConversiontoINR = $('#ManualInstrumentConversiontoINR').val();
            $.ajax({
                type: "POST",
                url: '/Margin/Margin_Upsert',
                data: { marginViewModel },
                success: function (data) {
                    $('.marginmodal').modal('hide');
                    alert('Data Saved !!');
                    MarginDataTable.init();
                }
            });
        }
        function DeleteMargin(obj) {
            var ID = $(obj).closest('tr').find('input[type="hidden"]').val();
            if (confirm('Are you sure you want to delete this record')) {
                $.ajax({
                    type: "POST",
                    url: '/Margin/DeleteMargin',
                    data: { ID },
                    success: function (data) {
                        MarginDataTable.init();
                    }
                });
            }
        }
        function GetMarginTypes() {
            $.ajax({
                type: "GET",
                url: '/Margin/GetMarginTypes',
                data: {},
                success: function (data) {
                    $.each(data, function (i, arr) {
                        var opt = new Option(arr.name, arr.id);
                        $('#ddlmargintype').append(opt);
                    });
                }
            });
        }
        function GetInstruments() {
            $('#ddlmargintypeval').html('');
            $.ajax({
                type: "GET",
                url: '/Margin/GetInstruments',
                data: {},
                success: function (data) {
                    $.each(data, function (i, arr) {
                        var opt = new Option(arr.name, arr.id);
                        $('#ddlmargintypeval').append(opt);
                    });

                }
            });
        }
        function GetSymbolGroups() {
            $('#ddlmargintypeval').html('');
            $.ajax({
                type: "GET",
                url: '/Margin/GetSymbolGroups',
                data: {},
                success: function (data) {
                    $.each(data, function (i, arr) {
                        var opt = new Option(arr.name, arr.id);
                        $('#ddlmargintypeval').append(opt);
                    });
                }
            });
        }

        var MarginRuleDataTable = function (Name) {
            let initTable1 = function () {
                let table = $('#marginRuleList');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '/MarginRule/Get_All',
                        type: "post",
                        data: { Name: Name }
                    },
                    "columns": [
                        {
                            "title": "Name", "data": "ruleName", "orderable": false, "width": "30%"
                        },
                        {
                            "title": "Priority", "data": "priority", "orderable": false, "width": "30%"
                        },
                        {
                            "title": "Action", "data": "marginRuleId",
                            "render": function (data, type, row) {
                                var html = "<div class='' style='width:92px'>";
                                html += "<a class='btn btn-success mr-1' href='/MarginRule/EditMarginRule?Id=" + row.marginRuleId + "' data-uri='/MarginRule/EditMarginRule?Id=" + row.marginRuleId + "' ><i class='fa fa-edit'></i></a>";

                                html += "<a class='btn btn-danger edt-dlt mr-1' href='javascript:void(0);' data-uri='/MarginRule/Delete?Id=" + row.marginRuleId + "' ><i class='fa fa-trash'></i></a>";


                               // html += "<a title='Delete' class='btn btn-danger mr-1' onclick='DeleteMarginRule(" + row.marginRuleId + ")'><i class='fa fa-trash'></i></a>";
                                html += "</div>";
                                return html;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    //"dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                init: function (UserId, FromDate, ToDate, Type) {
                    if ($.fn.DataTable.isDataTable("#marginRuleList")) {
                        $('#marginRuleList').dataTable().fnDestroy();
                        userId = UserId;
                        fromDate = FromDate;
                        toDate = ToDate;
                        type = Type;
                        //$('#divUserTable').html('<table class="table table-striped" width="100%" id="UserTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //function DeleteMarginRule(Id) {
        //    debugger;
        //    if (confirm('Are you sure you want to delete this record')) {
        //        $.ajax({
        //            type: "GET",
        //            url: '/MarginRule/Delete',
        //            data: { Id: Id },
        //            success: function (data) {
        //                NotifyMsg('success',data[0].message);
        //                location.reload();
        //            }
        //        });
        //    }
        //}
    </script>
}