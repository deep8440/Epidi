@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = "IB Listing";
    ViewBag.Method = "IB Listing";
}

<style>
    .select2-container {
        display: inline-block;
    }
</style>
<body>
<div class="row">
   
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                            <div class="btn btn-uppercase float-left">
                            <div class="form-group">
                                    @if (!string.IsNullOrEmpty(ViewBag.IBDuplicateMessege))
                                    {
                                        <script type="text/javascript">alert('@ViewBag.IBDuplicateMessege');</script>
                                    }
                                    @if (!string.IsNullOrEmpty(ViewBag.IBUpdateMessege))
                                    {
                                        <script type="text/javascript">alert('@ViewBag.IBUpdateMessege');</script>
                                    }
                                    @if (!string.IsNullOrEmpty(ViewBag.IBAddMessege))
                                    {
                                        <script type="text/javascript">alert('@ViewBag.IBAddMessege');</script>
                                    }
                                    @if (!string.IsNullOrEmpty(ViewBag.IBValidationMessege))
                                    {
                                        <script type="text/javascript">alert('@ViewBag.IBValidationMessege');</script>
                                    }
                                    @if(TempData["IBDupMessege"] != null){
                                    @foreach (var std in TempData["IBDupMessege"] as IList<string>)
                                    {
                                        <script type="text/javascript">alert('@std');</script>
                                    }
                                    }
                                    @if (TempData["IBUpdateDupMessege"] != null)
                                    {
                                        @foreach (var updateMess in TempData["IBUpdateDupMessege"] as IList<string>)
                                    {
                                            <script type="text/javascript">alert('@updateMess');</script>
                                    }
                                    }
                                    @*@if (ViewBag.IBDuplicateMessege != null)
                                    {
                                        <script type="text/javascript">
                                            window.onload = function () {
                                                var duplicateValue = $("#IBDuplicateMessege").val();
                                                NotifyMsg('error', duplicateValue);
                                            };         
                                        </script>
                                    } *@ 
                                    @*  @Html.DropDownList("BDMId", new SelectList(ViewBag.WhenToApplyCombo, "Value", "Text", "BDMID"), "-- Select BDM --", new { @class = "form-control js-select2" ,@id="BDMID" ,@Onchange = "GetBDMListALL($('#BDMID').val());" })
           *@                 </div>
                        </div>
                    </div>

                    <div class="col-6">
                        <a id="btnAddIB" href="/IB/AddIB" type="button" class="btn btn-outline-primary btn-uppercase float-right">
                            <i class="ti-plus mr-2"></i> Create IB
                        </a>
                        
                    </div>
                    <h3>IB List</h3>

                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <table id="IBList" class="table table-bordered table-striped">
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>
@*<div class="modal viewIBmodal" tabindex="-1" role="dialog" id="btnMapModal">
    <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModelTitleLable">IB</h5>

            </div>

            <div class="modal-body ViewIBmodalbody">
                <div class="row">
                    <div class="col-md-6 form-group">
                        <label>Name</label>
                        <input type="hidden" value="" id="id" />
                        <input type="text" class="form-control" id="name" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label>BDM</label>
                        <select id="bdmname" class="form-control"></select>
                    </div>
                    <div class="col-md-6 form-group">
                        <label> LegalEntity</label>
                        <select id="legalEntityName" class="form-control"></select>
                    </div>
                    <div class="col-md-6 form-group">
                        <label>ParentIBId</label>
                        <input type="text" class="form-control" id="parentIBId" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label>CountryId</label>
                        <input type="text" class="form-control" id="countryId" />
                    </div>

                     </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="InsertEntity();">Save changes</button>
            </div>


        </div>
    </div>
</div>*@
</body>


@section Scripts{
    <script src="~/js/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/js/jquery-validation/additional-methods.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script>
        
        $(document).ready(() => {
            
            //$('#IBList').on('draw.dt', function () {
            //    $('[data-toggle="tooltip"]').tooltip();
            //});

            //$("body").on("click", "#btnAddIB", function () {

            //    AddModal("/IB/AddIB", "Add New IB")
            //});
            
            IBDataTable.init('');


            $(document).on("submit", "#ibForm", function (e) {
                debugger;
                e.preventDefault();
                IBValidation();
                var form = $(this);
                form.ajaxSubmit({
                    beforeSubmit: function () {
                        if (!form.valid()) {

                            return false;
                        }
                        else {

                            return true;
                        }
                    },
                    success: function (res) {
                        if (res.code == 200) {
                            $("#frmModel").modal('hide');
                            $("#ibForm").resetForm();

                            IBDataTable.init('', '', '', '');

                            NotifyMsg('success', res.message);

                        } else {

                            NotifyMsg('error', res.message);
                        }
                    },
                    Errors: function () {

                        NotifyMsg('error', res.message);
                    }
                });
                return false;
            });
           
        });

        function IBValidation() {
            $('#ibForm').validate({
                rules: {
                    Name: {
                        required: true
                    }
                },
                messages: {
                    Name: "Please enter name"
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        }
        var IBDataTable = function (Name) {
            let initTable1 = function () {
                let table = $('#IBList');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "filter":true,
                    //"columnDefs": [{
                    //    "targets": [2],
                    //    "visible": false,
                    //    "searchable": false
                    //}],
                    "ajax": {
                        async: true,
                        url: '/IB/GetAll',
                        type: "post",
                        data: {Name :Name }
                    },

                    "columns": [
                        {
                            "title": "Name", "data": "name", "orderable": true, "width": "24%"
                        },

                        {
                            "title": "BDM", "data": "bdmname", "orderable": true, "width": "24%"
                        },
                        //{
                        //    "title": "Name", "data": "name", "orderable": true, "width": "24%"
                        //},
                        {
                            "title": "LegalEntity", "data": "legalEntityName", "orderable": true, "width": "24%"
                        },

                      
                        {
                            "title": "Country", "data": "countryName", "orderable": true, "width": "24%"
                        },


                        {
                            "title": "Action", "data": "id",
                            "render": function (data, type, row) {
                                var html = "<div class='btn-group dropleft'>";
                                html += "<a class='btn btn-success mr-1' href='/IB/Edit?Id=" + row.id + "' data-uri='/IB/Edit?Id=" + row.id + "' ><i class='fa fa-edit'></i></a>";
                                //html += "<a class='btn btn-success edt-rcd mr-1' href='javascript:void(0);' data-uri='/IB/Edit?Id=" + row.id + "' ><i class='fa fa-edit'></i></a>";

                                html += "<a class='btn btn-danger edt-dlt mr-1' href='javascript:void(0);' data-uri='/IB/DeleteIB?Id=" + row.id + "' ><i class='fa fa-trash'></i></a>";
                                html += "</div>";
                                return html;
                            }
                            , "orderable": false, "width": "3%"
                        },
                       
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    //"dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                init: function (UserId, FromDate, ToDate, Type) {
                    if ($.fn.DataTable.isDataTable("#IBList")) {
                        $('#IBList').dataTable().fnDestroy();
                        userId = UserId;
                        fromDate = FromDate;
                        toDate = ToDate;
                        type = Type;
                        //$('#divUserTable').html('<table class="table table-striped" width="100%" id="UserTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

      
        function IBDetailsUrl(Id, Name) {
            window.location.href = "/IB/Index?IBId=" + Id + "&name=" + Name;
        }

        //function Edit(obj) {
        //    debugger;
        //    $('#id').val($(obj).closest('tr').find('input[type="hidden"]').val());
        //    $('#name').val($(obj).closest('tr').find('td:eq(0)').html());
        //    $('#bdmname').val($(obj).closest('tr').find('td:eq(1)').html());
        //    $('#legalEntityName').val($(obj).closest('tr').find('td:eq(2)').html());
        //    $('#countryName').val($(obj).closest('tr').find('td:eq(3)').html());
        //    $('.ibForm').modal('show');
        //}



        function Updatedata(bdmid, id, obj) {
            debugger;
            var Name = $("#Name" + id).val();
            var Bdmname = $("#Bdmname" + id).val();
            var LegalEntityName = $("#LegalEntityName" + id).val();
            var CountryName = $("#CountryName" + id).val();
            var ParentIBId = $("#ParentIBId" + id).val();
         

            var modelobj =
            {
                Name: Name,
                Bdmname: Bdmname,
                LegalEntityName: LegalEntityName,
                CountryName: CountryName,
                ParentIBId: ParentIBId,
                IBId: id
            };

         


            if (confirm('Are you sure you want to update this record')) {
                $.ajax({
                    type: "POST",
                    async: false,
                    url: '/IB/SaveIB',
                    data: { model: modelobj },
                    success: function (data) {



                        alert('Record Updated !!');



                    }
                });
            }
        }
    </script>
}